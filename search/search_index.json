{"config":{"indexing":"full","lang":["ru","en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Before you start using the documentation, it is recommended to read the FAQ of the project. Choose the language in which it will be convenient for you to read it!","title":"Home"},{"location":"#before-you-start-using-the-documentation-it-is-recommended-to-read-the-faq-of-the-project-choose-the-language-in-which-it-will-be-convenient-for-you-to-read-it","text":"","title":"Before you start using the documentation, it is recommended to read the FAQ of the project. Choose the language in which it will be convenient for you to read it!"},{"location":"en_faq/","text":"Project: tense License: Apache 2.0 About: Time Processing Tool OS: Independent Python: 3.9+ Typing: Typed Topic: Utilities PyPi \u00b7 Report Bug \u00b7 Request Feature What is tense? tense - time parsing tool. Did you need to convert the string like \"1day1minute 20 seconds\" in number of seconds or a datetime.timedelta object? No? Then recommend us to your friends :) And if you are still here - let's continue! How is tense designed? tense designed to provide maximum flexibility , practicality and convenience to the user. Some logic is imported immediately as a class or function: from tense import TenseParser , from_tense_file , from_tense_file_source And some parts are imported as modules: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository Such an interface is made to avoid any cyclic imports and is the main style of the project. Quick-Start Let's start with the basics, let's say we have a string \"1day1minute 20 seconds\", how do we convert it to, as previously stated, the number of seconds or a datetime.timedelta object? - Let's consider! from tense import TenseParser time_string = \"1day1minute 20 seconds\" parser = TenseParser ( TenseParser . DIGIT ) assert parser . parse ( time_string ) == 86480 # It works. How does Tense Parser work? TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : See to github The first argument to TenseParser is a subclass of tense.application.ports.parsers.AbstractParser . Initially, there are already some ready-made implementations, such as TenseParser.DIGIT - tense.adapters.parsers.DigitParser and TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note You can also create your own custom parsers inheriting tense.application.ports.parsers.AbstractParser In TenseParser.__new__ there is a little \"processing\" of values that will be passed later into the ...AbstractParser subclass initializers, we end up with a finished ...AbstractParser subclass. Why is my string not being parsed? If your string is something along the lines of \"1 day + 2 minutes and 5 seconds\", then most likely you will have only the last value is converted. Ask why so? - It's about resolver (time_resolver). By default, there is a resolver that does an excellent job with primitive strings, this string is complex (see terms at the end of the FAQ). In addition to the \"primitive\" resolver, which is the default, there is also a \"smart\" one. Info tense.application.resolvers.smart_resolver() is also case insensitive. See to github Note Just like with parsers, you can create your custom resolver, just don't forget that the resolver has a base signature (arg1: str, arg2: model.Tense). from tense import TenseParser , resolvers time_string = \"1 day + 2 minutes and 5seconds\" parser = TenseParser ( TenseParser . DIGIT , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525 What is the \"converter\" argument of TenseParser? The ...AbstractParser class has a parse method that cannot be overridden. In this method before returning a value, the implementation of the abstract method ._parse() from subclasses is called, the value which is converted in accordance with the specified converter, if it is not equal to None. Note We try to make tense as flexible as possible, so almost every hook you can implement in your own way and transfer to the appropriate place. Converter is no exception, you you can create your own custom one by first deriving it from tense.application.ports.converters.AbstractConverter. Also worth considering is the fact that ...AbstractConverter is a generic that accepts a value type, which will be returned as a result of the conversion (it is also returned in the abstract .convert() method). What about delete/replace aliases? Atomic operations in tense are implemented by the UnitOfWork pattern, which in turn interacts with alias repository. Let's take a closer look Removing aliases # <--- Syntax sugar \"with\" allows you to break sections of code into logical blocks ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # Converted the type of time unit to the path for the config assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # Default \"second\" alias in units.Second aliases uow . delete_aliases ( units . Second , [ \"second\" ]) # Remove alias from units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # Alias has been removed. Replacing aliases from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # Converted the type of time unit to the path for the config assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # Default \"second\" alias in units.Second aliases uow . replace_aliases ( units . Second , { \"second\" : \"other_second\" }) # Change alias \"second\" to \"second\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # Get alias state after replacement assert \"second\" not in alias_state # Alias \"second\" removed assert \"other_second\" in alias_state # Instead of \"second\" there is a new alias - \"other_second\" Next, we pass the repository sources to TenseParser(tenses=uow.products.config) How to add custom time units? For custom time units, tense.domain.units has a separate class - VirtualUnit. He is no different from ..Unit, but useful for logically separating virtual units from base units, and possibly new ones in the near future functionality. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"twoseconds\" ], duration = 2 ) ) # or . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"threeseconds\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 twoseconds 1 threeseconds\" ) == 5 Configuration file At first glance, it may seem incomprehensible, like any other config without documentation. But for this, she (ed. documentation) and created! The tense config is not tied to a specific file type or file name, but we recommend sticking to the basic standard - the name \".tense\". The tense config file parser supports just a few patterns, but you don't need more. let's consider each of them. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter Responsible for all expressions with type assignment (variable = value). Calls subconverters if subconverter for expression is not found - raises a ValueError. Responsible for all numerical values of objects (variable = 123). Responsible for all boolean values of objects (variable = True|False|true|false). Danger Lists in tense are similar in pattern to python tuples. If you have there is only one element of the list, then you must specify it with a comma, otherwise an error will occur. Responsible for all list values of objects (variable = 1, 2, 3). It should be noted that only one list pattern is supported - separated by commas. the python-list pattern with square brackets is used to define headings, which break the configuration into logical groups. Note All expressions are safe. For expressions in the parser, the \"exp(do stuff here)\" marker is used (exp. from expression - expression). Responsible for all values of objects that contain the expression (variable = exp(6 * 6)). Info For convenience, the following constants have been added to the local values of expressions: second: 1 minute: 60 hour: 60 * 60 day: 60 * 60 * 24 week: 60 * 60 * 24 * 7 year: 60 * 60 * 24 * 365 Demo: \"duration = exp(year * 10)\" # Decade duration implementation! It is also worth noting the fact that even if you change the duration of any unit time from units.Unit, then these constants in expressions will still remain with the original value, because they are implemented by a dictionary and are not interconnected in any way. If to delve into the process of lexing, then for each pattern, roughly speaking, there is a converter. These converters are divided to main (AbstractParticleConverter) and subconverters (AbstractParticleValueConverter) these are all existing converters at the moment, the ranks of which are likely to be replenished in the near future. Each pattern (token/particle, I will use the \"particle\" - dot_tense.domain.HashableParticle) has its own predicate (condition) that defines its own converter. In turn, each converter has its own a predicate that determines its corresponding value. The configuration parsing process itself is implemented using the \"chain_of_responsibility\" pattern, where each stage (step) has its own task. In our case, 3 stages are implemented: LexingStep, AnalyzeStep, CompilingStep. See on github Note Before we start parsing the configuration parsing steps, it is worth clarifying that parsing a configuration file (or its contents, no matter) goes from top to bottom in the line. Therefore, it is important to follow the order of the headings and settings, which we will talk about as soon as we consider the stages of parsing. At the first stage, LexingStep, strings are parsed into particles (tokens). In the second step, AnalyzeStep, the configuration is analyzed for possible errors. In the third step, CompilingStep, virtual units of time are added. Open base configuration template See on github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, } Comments in configuration At the moment, only one type of comments is supported - the pound \"#\". Configuration headers [model.Tense] Attention This header is mandatory in ANY case. multiplier - Type: `integer` - Description: This setting is in some parsers (such as DigitParser and its subclasses) by a time multiplier. [virtual] Note Unlike other units of time, you can use this heading an unlimited number of times. to create various custom units. Demonstration [model.Tense] [virtual] aliases = decade, decades duration = year * 10 [virtual] aliases = century, centuries duration = year * 100 [virtual] aliases = millennium, duration = year * 1000 duration aliases - Type: `integer` - Description: This setting is responsible for the duration certain unit of time. - Type: `list[string]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, a custom unit). [units.Second] duration aliases - Type: `integer` - Default: 1 - Description: This setting is responsible for the duration of the second. - Type: `list[string]` - Default in template: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - seconds). [units.Minute] duration aliases - Type: `integer` - Default: 60 - Description: This setting is responsible for the duration of the minute. - Type: `list[string]` - Default in template: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - minutes). [units.Hour] duration aliases - Type: `integer` - Default: 60 * 60 - Description: This setting is responsible for the duration of the hour. - Type: `list[string]` - Default in template: `[\"h\", \"hour\", \"hours\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - hours). [untits.Day] duration aliases - Type: `integer` - Default: 60 * 60 * 24 - Description: This setting is responsible for the length of the day. - Type: `list[string]` - Default in template: `[\"d\", \"day\", \"days\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, a day). [units.Week] duration aliases - Type: `integer` - Default: 60 * 60 * 24 * 7 - Description: This setting is responsible for the length of the week. - Type: `list[string]` - Default in pattern: `[\"w\", \"week\", \"weeks\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - weeks). [units.Year] duration aliases - Type: `integer` - Default: 60 * 60 * 24 * 365 - Description: This setting is responsible for the length of the year. - Type: `list[string]` - Default in template: `[\"y\", \"year\", \"years\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, years). Configuration - dealt with the theory, now to practice! But before we get started, it's worth knowing how from_tense_file differs from from_tense_file_source . It seems to be obvious from the name, but it seems not... Therefore, I will explain everything now! from_tense_file opens the file at the given path, reads it, and returns a call to from_tense_file_source which in turn, it parses specifically the string representation of the config. Note If the configuration is loaded from a configuration file or its string representation, then it does not replace completely, but updates an already existing repository template using the dict.update() method. I will use from_tense_file_source to emulate the config, but you get the point. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # This field is optional, because the second default # duration is 60 seconds, and, as mentioned earlier, the config that loads in this way are # **not changed** to the new one, but **updated** with the new one using the dict.update() method. aliases = s, sec, seconds # But old aliases won't be saved here. [virtual] aliases = millennium, duration = exp(year * 1000) \"\"\" time_string = \"1 millennium and 20 seconds...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D In the course of writing the documentation, I noticed one interesting feature. In fact, no one forbids importing VCONVERTER_CONSTS (constants for expressions in configuration type year * 10 ) and add new values there! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"decade\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = century, centuries duration = exp(decade * 10) \"\"\" time_string = \"1 century\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500 Terms Primitive time string Definition Examples Strong precedence string `(number, time unit)` 1. 1day 2 minutes5 seconds Complex time string Definition Examples String with loose order `(word..*, number, word..*, time unit)` 1. Please convert 1 week and 2 days Alias Definition Examples Alias words for something (in the context of our project - aliases for units of time). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] Resolver Definition A function that adapts (prepares) a string for the parser.","title":"English"},{"location":"en_faq/#what-is-tense","text":"tense - time parsing tool. Did you need to convert the string like \"1day1minute 20 seconds\" in number of seconds or a datetime.timedelta object? No? Then recommend us to your friends :) And if you are still here - let's continue!","title":"What is tense?"},{"location":"en_faq/#how-is-tense-designed","text":"tense designed to provide maximum flexibility , practicality and convenience to the user. Some logic is imported immediately as a class or function: from tense import TenseParser , from_tense_file , from_tense_file_source And some parts are imported as modules: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository Such an interface is made to avoid any cyclic imports and is the main style of the project.","title":"How is tense designed?"},{"location":"en_faq/#quick-start","text":"Let's start with the basics, let's say we have a string \"1day1minute 20 seconds\", how do we convert it to, as previously stated, the number of seconds or a datetime.timedelta object? - Let's consider! from tense import TenseParser time_string = \"1day1minute 20 seconds\" parser = TenseParser ( TenseParser . DIGIT ) assert parser . parse ( time_string ) == 86480 # It works.","title":"Quick-Start"},{"location":"en_faq/#how-does-tense-parser-work","text":"TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : See to github The first argument to TenseParser is a subclass of tense.application.ports.parsers.AbstractParser . Initially, there are already some ready-made implementations, such as TenseParser.DIGIT - tense.adapters.parsers.DigitParser and TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note You can also create your own custom parsers inheriting tense.application.ports.parsers.AbstractParser In TenseParser.__new__ there is a little \"processing\" of values that will be passed later into the ...AbstractParser subclass initializers, we end up with a finished ...AbstractParser subclass.","title":"How does Tense Parser work?"},{"location":"en_faq/#why-is-my-string-not-being-parsed","text":"If your string is something along the lines of \"1 day + 2 minutes and 5 seconds\", then most likely you will have only the last value is converted. Ask why so? - It's about resolver (time_resolver). By default, there is a resolver that does an excellent job with primitive strings, this string is complex (see terms at the end of the FAQ). In addition to the \"primitive\" resolver, which is the default, there is also a \"smart\" one. Info tense.application.resolvers.smart_resolver() is also case insensitive. See to github Note Just like with parsers, you can create your custom resolver, just don't forget that the resolver has a base signature (arg1: str, arg2: model.Tense). from tense import TenseParser , resolvers time_string = \"1 day + 2 minutes and 5seconds\" parser = TenseParser ( TenseParser . DIGIT , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525","title":"Why is my string not being parsed?"},{"location":"en_faq/#what-is-the-converter-argument-of-tenseparser","text":"The ...AbstractParser class has a parse method that cannot be overridden. In this method before returning a value, the implementation of the abstract method ._parse() from subclasses is called, the value which is converted in accordance with the specified converter, if it is not equal to None. Note We try to make tense as flexible as possible, so almost every hook you can implement in your own way and transfer to the appropriate place. Converter is no exception, you you can create your own custom one by first deriving it from tense.application.ports.converters.AbstractConverter. Also worth considering is the fact that ...AbstractConverter is a generic that accepts a value type, which will be returned as a result of the conversion (it is also returned in the abstract .convert() method).","title":"What is the \"converter\" argument of TenseParser?"},{"location":"en_faq/#what-about-deletereplace-aliases","text":"Atomic operations in tense are implemented by the UnitOfWork pattern, which in turn interacts with alias repository. Let's take a closer look Removing aliases # <--- Syntax sugar \"with\" allows you to break sections of code into logical blocks ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # Converted the type of time unit to the path for the config assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # Default \"second\" alias in units.Second aliases uow . delete_aliases ( units . Second , [ \"second\" ]) # Remove alias from units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # Alias has been removed. Replacing aliases from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # Converted the type of time unit to the path for the config assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # Default \"second\" alias in units.Second aliases uow . replace_aliases ( units . Second , { \"second\" : \"other_second\" }) # Change alias \"second\" to \"second\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # Get alias state after replacement assert \"second\" not in alias_state # Alias \"second\" removed assert \"other_second\" in alias_state # Instead of \"second\" there is a new alias - \"other_second\" Next, we pass the repository sources to TenseParser(tenses=uow.products.config)","title":"What about delete/replace aliases?"},{"location":"en_faq/#how-to-add-custom-time-units","text":"For custom time units, tense.domain.units has a separate class - VirtualUnit. He is no different from ..Unit, but useful for logically separating virtual units from base units, and possibly new ones in the near future functionality. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"twoseconds\" ], duration = 2 ) ) # or . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"threeseconds\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 twoseconds 1 threeseconds\" ) == 5","title":"How to add custom time units?"},{"location":"en_faq/#configuration-file","text":"At first glance, it may seem incomprehensible, like any other config without documentation. But for this, she (ed. documentation) and created! The tense config is not tied to a specific file type or file name, but we recommend sticking to the basic standard - the name \".tense\". The tense config file parser supports just a few patterns, but you don't need more. let's consider each of them. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter Responsible for all expressions with type assignment (variable = value). Calls subconverters if subconverter for expression is not found - raises a ValueError. Responsible for all numerical values of objects (variable = 123). Responsible for all boolean values of objects (variable = True|False|true|false). Danger Lists in tense are similar in pattern to python tuples. If you have there is only one element of the list, then you must specify it with a comma, otherwise an error will occur. Responsible for all list values of objects (variable = 1, 2, 3). It should be noted that only one list pattern is supported - separated by commas. the python-list pattern with square brackets is used to define headings, which break the configuration into logical groups. Note All expressions are safe. For expressions in the parser, the \"exp(do stuff here)\" marker is used (exp. from expression - expression). Responsible for all values of objects that contain the expression (variable = exp(6 * 6)). Info For convenience, the following constants have been added to the local values of expressions: second: 1 minute: 60 hour: 60 * 60 day: 60 * 60 * 24 week: 60 * 60 * 24 * 7 year: 60 * 60 * 24 * 365 Demo: \"duration = exp(year * 10)\" # Decade duration implementation! It is also worth noting the fact that even if you change the duration of any unit time from units.Unit, then these constants in expressions will still remain with the original value, because they are implemented by a dictionary and are not interconnected in any way. If to delve into the process of lexing, then for each pattern, roughly speaking, there is a converter. These converters are divided to main (AbstractParticleConverter) and subconverters (AbstractParticleValueConverter) these are all existing converters at the moment, the ranks of which are likely to be replenished in the near future. Each pattern (token/particle, I will use the \"particle\" - dot_tense.domain.HashableParticle) has its own predicate (condition) that defines its own converter. In turn, each converter has its own a predicate that determines its corresponding value. The configuration parsing process itself is implemented using the \"chain_of_responsibility\" pattern, where each stage (step) has its own task. In our case, 3 stages are implemented: LexingStep, AnalyzeStep, CompilingStep. See on github Note Before we start parsing the configuration parsing steps, it is worth clarifying that parsing a configuration file (or its contents, no matter) goes from top to bottom in the line. Therefore, it is important to follow the order of the headings and settings, which we will talk about as soon as we consider the stages of parsing. At the first stage, LexingStep, strings are parsed into particles (tokens). In the second step, AnalyzeStep, the configuration is analyzed for possible errors. In the third step, CompilingStep, virtual units of time are added. Open base configuration template See on github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, }","title":"Configuration file"},{"location":"en_faq/#comments-in-configuration","text":"At the moment, only one type of comments is supported - the pound \"#\".","title":"Comments in configuration"},{"location":"en_faq/#configuration-headers","text":"[model.Tense] Attention This header is mandatory in ANY case. multiplier - Type: `integer` - Description: This setting is in some parsers (such as DigitParser and its subclasses) by a time multiplier. [virtual] Note Unlike other units of time, you can use this heading an unlimited number of times. to create various custom units. Demonstration [model.Tense] [virtual] aliases = decade, decades duration = year * 10 [virtual] aliases = century, centuries duration = year * 100 [virtual] aliases = millennium, duration = year * 1000 duration aliases - Type: `integer` - Description: This setting is responsible for the duration certain unit of time. - Type: `list[string]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, a custom unit). [units.Second] duration aliases - Type: `integer` - Default: 1 - Description: This setting is responsible for the duration of the second. - Type: `list[string]` - Default in template: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - seconds). [units.Minute] duration aliases - Type: `integer` - Default: 60 - Description: This setting is responsible for the duration of the minute. - Type: `list[string]` - Default in template: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - minutes). [units.Hour] duration aliases - Type: `integer` - Default: 60 * 60 - Description: This setting is responsible for the duration of the hour. - Type: `list[string]` - Default in template: `[\"h\", \"hour\", \"hours\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - hours). [untits.Day] duration aliases - Type: `integer` - Default: 60 * 60 * 24 - Description: This setting is responsible for the length of the day. - Type: `list[string]` - Default in template: `[\"d\", \"day\", \"days\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, a day). [units.Week] duration aliases - Type: `integer` - Default: 60 * 60 * 24 * 7 - Description: This setting is responsible for the length of the week. - Type: `list[string]` - Default in pattern: `[\"w\", \"week\", \"weeks\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case - weeks). [units.Year] duration aliases - Type: `integer` - Default: 60 * 60 * 24 * 365 - Description: This setting is responsible for the length of the year. - Type: `list[string]` - Default in template: `[\"y\", \"year\", \"years\"]` - Description: This setting contains a list of all aliases a certain unit of time (in this case, years).","title":"Configuration headers"},{"location":"en_faq/#configuration-dealt-with-the-theory-now-to-practice","text":"But before we get started, it's worth knowing how from_tense_file differs from from_tense_file_source . It seems to be obvious from the name, but it seems not... Therefore, I will explain everything now! from_tense_file opens the file at the given path, reads it, and returns a call to from_tense_file_source which in turn, it parses specifically the string representation of the config. Note If the configuration is loaded from a configuration file or its string representation, then it does not replace completely, but updates an already existing repository template using the dict.update() method. I will use from_tense_file_source to emulate the config, but you get the point. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # This field is optional, because the second default # duration is 60 seconds, and, as mentioned earlier, the config that loads in this way are # **not changed** to the new one, but **updated** with the new one using the dict.update() method. aliases = s, sec, seconds # But old aliases won't be saved here. [virtual] aliases = millennium, duration = exp(year * 1000) \"\"\" time_string = \"1 millennium and 20 seconds...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D In the course of writing the documentation, I noticed one interesting feature. In fact, no one forbids importing VCONVERTER_CONSTS (constants for expressions in configuration type year * 10 ) and add new values there! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"decade\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = century, centuries duration = exp(decade * 10) \"\"\" time_string = \"1 century\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500","title":"Configuration - dealt with the theory, now to practice!"},{"location":"en_faq/#terms","text":"Primitive time string Definition Examples Strong precedence string `(number, time unit)` 1. 1day 2 minutes5 seconds Complex time string Definition Examples String with loose order `(word..*, number, word..*, time unit)` 1. Please convert 1 week and 2 days Alias Definition Examples Alias words for something (in the context of our project - aliases for units of time). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] Resolver Definition A function that adapts (prepares) a string for the parser.","title":"Terms"},{"location":"ru_faq/","text":"\u041f\u0440\u043e\u0435\u043a\u0442: tense \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f: Apache 2.0 \u041e \u043f\u0440\u043e\u0435\u043a\u0442\u0435: \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u041e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0439 Python: 3.9+ Typing: Typed \u0422\u0435\u043c\u0430: \u0423\u0442\u0438\u043b\u0438\u0442\u044b PyPi \u00b7 \u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043e \u0411\u0430\u0433\u0435 \u00b7 \u041f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u0442\u044c \u0418\u0434\u0435\u044e \u0427\u0442\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 tense? tense - \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u041d\u0443\u0436\u043d\u043e \u043b\u0438 \u0412\u0430\u043c \u0431\u044b\u043b\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0442\u0438\u043f\u0430 \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" \u0432 \u043a\u043e\u043b-\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 datetime.timedelta? \u041d\u0435\u0442? \u0422\u043e\u0433\u0434\u0430 \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u0443\u0439\u0442\u0435 \u043d\u0430\u0441 \u0441\u0432\u043e\u0438\u043c \u0434\u0440\u0443\u0437\u044c\u044f\u043c :) \u0410 \u0435\u0441\u043b\u0438 \u0432\u044b \u0432\u0441\u0451 \u0435\u0449\u0451 \u0437\u0434\u0435\u0441\u044c - \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c! \u041a\u0430\u043a \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d tense? tense \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0442\u0430\u043a, \u0447\u0442\u043e\u0431 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0433\u0438\u0431\u043a\u043e\u0441\u0442\u044c , \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441\u0440\u0430\u0437\u0443, \u043a\u0430\u043a \u043a\u043b\u0430\u0441\u0441 \u0438\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f: from tense import TenseParser , from_tense_file , from_tense_file_source \u0410 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0447\u0430\u0441\u0442\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u043c\u043e\u0434\u0443\u043b\u0438: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository \u0422\u0430\u043a\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441\u0434\u0435\u043b\u0430\u043d \u0432\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u043d\u0438\u0435 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u043c\u043f\u043e\u0440\u0442\u043e\u0432 \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u0441\u0442\u0438\u043b\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0421 \u0447\u0435\u0433\u043e \u043d\u0430\u0447\u0430\u0442\u044c? \u041d\u0430\u0447\u043d\u0451\u043c \u0441 \u043e\u0441\u043d\u043e\u0432, \u0434\u043e\u0441\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0430 \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\", \u043a\u0430\u043a \u043d\u0430\u043c \u0435\u0451 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0432, \u043a\u0430\u043a \u0440\u0430\u043d\u0435\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044c, \u043a\u043e\u043b-\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 datetime.timedelta? - \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c! from tense import TenseParser time_string = \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT ) >>> parser . parse ( time_string ) 0 \u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435-\u043a\u0430, 0? \u0418 \u044d\u0442\u043e \u0432\u0441\u0451? - \u041d\u0435\u0442. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0430\u043b\u0438\u0430\u0441\u044b \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430, \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0430\u043c\u0438! \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435: from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u043c\u0438\u043d\u0443\u0442\u0430\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) >>> parser . parse ( time_string ) 86480 \u0412\u043e\u0442, \u0434\u0440\u0443\u0433\u043e\u0435 \u0434\u0435\u043b\u043e! \u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 TenseParser? TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : \u0421\u043c. \u043d\u0430 github \u041f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c TenseParser \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 \u043e\u0442 tense.application.ports.parsers.AbstractParser . \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0435\u0441\u0442\u044c \u0443\u0436\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0433\u043e\u0442\u043e\u0432\u044b\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a TenseParser.DIGIT - tense.adapters.parsers.DigitParser \u0438 TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0438 \u0441\u0432\u043e\u0438 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043f\u0430\u0440\u0441\u0435\u0440\u044b, \u043f\u0440\u0435\u0436\u0434\u0435 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0432 tense.application.ports.parsers.AbstractParser \u0412 TenseParser.__new__ \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0430\u044f \"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0432 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u043e\u0432 ...AbstractParser , \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 ...AbstractParser . \u041f\u043e\u0447\u0435\u043c\u0443 \u043c\u043e\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0441\u044f? \u0415\u0441\u043b\u0438 \u0432\u0430\u0448\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u043c-\u0442\u043e \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 \"1 \u0434\u0435\u043d\u044c + 2 \u043c\u0438\u043d\u0443\u0442\u044b \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\", \u0442\u043e, \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0421\u043f\u0440\u043e\u0441\u0438\u0442\u0435, \u043f\u043e\u0447\u0435\u043c\u0443 \u0442\u0430\u043a? - \u0414\u0435\u043b\u043e \u0432 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0435 (time_resolver). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0442\u043e\u0438\u0442 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438, \u0434\u0430\u043d\u043d\u0430\u044f \u0436\u0435 \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0439 (\u0441\u043c. \u0432 \u043a\u043e\u043d\u0446\u0435 FAQ \u0442\u0435\u0440\u043c\u0438\u043d\u044b). \u041f\u043e\u043c\u0438\u043c\u043e \"\u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u043e\u0433\u043e\" \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0442\u043e\u0438\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0442\u0430\u043a \u0436\u0435 \u0435\u0441\u0442\u044c \u0438 \"\u0443\u043c\u043d\u044b\u0439\". Info tense.application.resolvers.smart_resolver() \u0442\u0430\u043a \u0436\u0435 \u043d\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443. \u0421\u043c. \u043d\u0430 github Note \u0422\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0438 \u0441 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u043c\u0438, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u0443 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430 \u0435\u0441\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 (arg1: str, arg2: model.Tense). from tense import TenseParser , units , resolvers from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u043c\u0438\u043d\u0443\u0442\u044b\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1 \u0434\u0435\u043d\u044c + 2 \u043c\u0438\u043d\u0443\u0442\u044b \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525 \u0410 \u0447\u0442\u043e \u0437\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \"converter\" \u0443 TenseParser? \u0423 \u043a\u043b\u0430\u0441\u0441\u0430 ...AbstractParser \u0435\u0441\u0442\u044c \u043c\u0435\u0442\u043e\u0434 parse, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0435\u0440\u0435\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 ._parse() \u0438\u0437 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u043e\u043c, \u0435\u0441\u043b\u0438 \u0442\u043e\u0442 \u043d\u0435 \u0440\u0430\u0432\u0435\u043d None. Note \u041c\u044b \u0441\u0442\u0430\u0440\u0430\u0435\u043c\u0441\u044f \u0441\u0434\u0435\u043b\u0430\u0442\u044c tense \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u043e\u043b\u0435\u0435 \u0433\u0438\u0431\u043a\u0438\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u0443\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e-\u0441\u0432\u043e\u0435\u043c\u0443 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043c\u0435\u0441\u0442\u043e. \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c, \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439, \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439, \u043f\u0440\u0435\u0436\u0434\u0435 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0432 \u0435\u0433\u043e \u043e\u0442 tense.application.ports.converters.AbstractConverter. \u0422\u0430\u043a \u0436\u0435 \u0441\u0442\u043e\u0438\u0442 \u0443\u0447\u0435\u0441\u0442\u044c \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e ...AbstractConverter \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0436\u0435\u043d\u0435\u0440\u0438\u043a\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 (\u0435\u0433\u043e \u0436\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 .convert()). \u0410 \u0447\u0442\u043e \u043d\u0430\u0441\u0447\u0451\u0442 delete/replace \u0430\u043b\u0438\u0430\u0441\u043e\u0432? \u0410\u0442\u043e\u043c\u0430\u0440\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 tense \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u043c UnitOfWork , \u043a\u043e\u0442\u043e\u0440\u044b\u0439, \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u0430\u043b\u0438\u0430\u0441\u043e\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 # <--- \u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0430\u0445\u0430\u0440 \"with\" \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0442\u044c \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u043d\u0430 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043b\u043e\u043a\u0438 ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0430 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \"second\" \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0430\u043b\u0438\u0430\u0441\u0430\u0445 units.Second uow . delete_aliases ( units . Second , [ \"second\" ]) # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0430\u043b\u0438\u0430\u0441 \u0443 units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \u0443\u0434\u0430\u043b\u0451\u043d. \u0417\u0430\u043c\u0435\u043d\u0430 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0430 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \"second\" \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0430\u043b\u0438\u0430\u0441\u0430\u0445 units.Second uow . replace_aliases ( units . Second , { \"second\" : \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" }) # \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0430\u043b\u0438\u0430\u0441 \"second\" \u043d\u0430 \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0430\u043b\u0438\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d\u044b assert \"second\" not in alias_state # \u0410\u043b\u0438\u0430\u0441 \"second\" \u0443\u0434\u0430\u043b\u0451\u043d assert \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" in alias_state # \u0412\u043c\u0435\u0441\u0442\u043e \"second\" \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u0430\u043b\u0438\u0430\u0441 - \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0432 TenseParser(tenses=uow.products.config) \u041a\u0430\u043a \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u0438 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438? \u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 tense.domain.units \u0432\u044b\u0434\u0435\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 - VirtualUnit. \u041e\u043d \u043d\u0438\u0447\u0435\u043c \u043d\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 ..Unit, \u043d\u043e \u0443\u0434\u043e\u0431\u0435\u043d \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u043e\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u0438, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0449\u0435\u043c - \u043d\u043e\u0432\u044b\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"\u0434\u0432\u0435\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ], duration = 2 ) ) # \u0438\u043b\u0438 . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"\u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 \u0434\u0432\u0435\u0441\u0435\u043a\u0443\u043d\u0434\u044b 1 \u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ) == 5 \u0424\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u041d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0437\u0433\u043b\u044f\u0434 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c, \u043a\u0430\u043a \u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433 \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u041d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0436 \u043e\u043d\u0430 (\u0440\u0435\u0434. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f) \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0430! \u041a\u043e\u043d\u0444\u0438\u0433 tense \u043d\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438\u043b\u0438 \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043d\u043e \u043c\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043f\u0440\u0438\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430 - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \".tense\". \u041f\u0430\u0440\u0441\u0435\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0444\u0430\u0439\u043b\u043e\u0432 tense \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432, \u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0438 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043d\u0438\u0445. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435\u043c \u0442\u0438\u043f\u0430 (variable = value). \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b, \u0435\u0441\u043b\u0438 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u0434\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d - \u0432\u043e\u0437\u0431\u0443\u0434\u0438\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 ValueError. \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = 123). \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0431\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = True|False|true|false). Danger \u0421\u043f\u0438\u0441\u043a\u0438 \u0432 tense \u043f\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0443 \u0441\u0445\u043e\u0436\u0438 \u0441 \u043a\u043e\u0440\u0442\u0435\u0436\u0430\u043c\u0438 python. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430, \u0442\u043e \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0435\u0433\u043e \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439, \u0438\u043d\u0430\u0447\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430. \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0441\u043f\u0438\u0441\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = 1, 2, 3). \u0421\u0442\u043e\u0438\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u0441\u043f\u0438\u0441\u043a\u0430 - \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e. \u043f\u0430\u0442\u0442\u0435\u0440\u043d python-list \u0441 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u043c\u0438 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044e\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u043d\u0430 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b. !!! note: \u0412\u0441\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u043c\u0438. \u0414\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0430\u0440\u043a\u0435\u0440 \"exp(do stuff here)\" (exp. \u043e\u0442 expression - \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435). \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 (variable = exp(6 * 6)). !!! info: \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b: - second: 1 - minute: 60 - hour: 60 * 60 - day: 60 * 60 * 24 - week: 60 * 60 * 24 * 7 - year: 60 * 60 * 24 * 365 \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f: \"duration = exp(year * 10)\" # \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u044f! \u0422\u0430\u043a \u0436\u0435 \u0441\u0442\u043e\u0438\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0434\u0430\u0436\u0435 \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 duration \u0443 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438\u0437 units.Unit, \u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0432 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445 \u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u0441 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043e\u043d\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0451\u043c \u0438 \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u0430\u043d\u044b. \u0415\u0441\u043b\u0438 \u0443\u0433\u043b\u0443\u0431\u043b\u044f\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043b\u0435\u043a\u0441\u0438\u043d\u0433\u0430, \u0442\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430, \u0433\u0440\u0443\u0431\u043e \u0433\u043e\u0432\u043e\u0440\u044f, \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u042d\u0442\u0438 \u0436\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 (AbstractParticleConverter) \u0438 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b (AbstractParticleValueConverter) \u044d\u0442\u043e \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, \u0440\u044f\u0434\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0445, \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0449\u0435\u043c. \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 (\u0442\u043e\u043a\u0435\u043d\u0430/\u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0430, \u0434\u0430\u043b\u044c\u0448\u0435 \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \"\u043f\u0430\u0440\u0442\u0438\u043a\u043b\" - dot_tense.domain.HashableParticle) \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0435\u0439\u0442 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0412 \u0441\u0432\u043e\u044e \u0436\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430 \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0435\u0439\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0441\u0435\u0431\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0421\u0430\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 \"chain_of_responsibility\", \u0433\u0434\u0435 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 (\u0448\u0430\u0433\u0430) \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u0437\u0430\u0434\u0430\u0447\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e 3 \u044d\u0442\u0430\u043f\u0430: LexingStep, AnalyzeStep, CompilingStep. \u0421\u043c. \u043d\u0430 github Note \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043c\u044b \u043d\u0430\u0447\u043d\u0451\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u044d\u0442\u0430\u043f\u043e\u0432 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0441\u0442\u043e\u0438\u0442 \u0443\u0442\u043e\u0447\u043d\u0438\u0442\u044c, \u0447\u0442\u043e \u0430\u043d\u0430\u043b\u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (\u0438\u043b\u0438 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e, \u0431\u0435\u0437 \u0440\u0430\u0437\u043d\u0438\u0446\u044b) \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0442\u043e\u0438\u0442 \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a, \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e-\u0432\u043e\u0442 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u044d\u0442\u0430\u043f\u044b \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430. \u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u043f\u0435, LexingStep, \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a \u043d\u0430 \u043f\u0430\u0440\u0442\u0438\u043a\u043b\u044b (\u0442\u043e\u043a\u0435\u043d\u044b). \u041d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u044d\u0442\u0430\u043f\u0435, AnalyzeStep, \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438. \u041d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u044d\u0442\u0430\u043f\u0435, CompilingStep, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0420\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0421\u043c. \u043d\u0430 github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Abs tra c t Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, } \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0432\u0438\u0434 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 - \u0440\u0435\u0448\u0451\u0442\u043a\u0430 \"#\". \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 [model.Tense] Attention \u0414\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432 \u041b\u042e\u0411\u041e\u041c \u0441\u043b\u0443\u0447\u0430\u0435. multiplier - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u0445 (\u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a DigitParser \u0438 \u0435\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u044b) \u043c\u043d\u043e\u0436\u0438\u0442\u0435\u043b\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438. [virtual] Note \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0434\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u044e\u043d\u0438\u0442\u043e\u0432. \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f [model.Tense] [virtual] aliases = \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435, \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0439 duration = year * 10 [virtual] aliases = \u0432\u0435\u043a, \u0432\u0435\u043a\u043e\u0432 duration = year * 100 [virtual] aliases = \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435, \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u044f duration = year * 1000 duration aliases - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u044e\u043d\u0438\u0442\u0430). [units.Second] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434\u044b. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0441\u0435\u043a\u0443\u043d\u0434\u044b). [units.Minute] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043c\u0438\u043d\u0443\u0442\u044b. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043c\u0438\u043d\u0443\u0442\u044b). [units.Hour] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0430\u0441\u0430. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"h\", \"hour\", \"hours\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0447\u0430\u0441\u0430). [untits.Day] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"d\", \"day\", \"days\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0434\u043d\u044f). [units.Week] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 * 7 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435\u0434\u0435\u043b\u0438. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"w\", \"week\", \"weeks\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043d\u0435\u0434\u0435\u043b\u0438). [units.Year] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 * 365 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0433\u043e\u0434\u0430. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"y\", \"year\", \"years\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0433\u043e\u0434\u0430). \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f - \u0441 \u0442\u0435\u043e\u0440\u0438\u0435\u0439 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0438\u0441\u044c, \u0442\u0435\u043f\u0435\u0440\u044c \u043a \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435! \u041d\u043e, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043c\u044b \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c \u043a \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435, \u0441\u0442\u043e\u0438\u0442 \u0443\u0437\u043d\u0430\u0442\u044c \u0447\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f from_tense_file \u043e\u0442 from_tense_file_source . \u0412\u0440\u043e\u0434\u0435 \u0431\u044b \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0430 \u0432\u0440\u043e\u0434\u0435 \u0438 \u043d\u0435\u0442... \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0432\u0441\u0451 \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u0431\u044a\u044f\u0441\u043d\u044e! from_tense_file \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438, \u0447\u0438\u0442\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0437\u043e\u0432 from_tense_file_source , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u043f\u0430\u0440\u0441\u0438\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0430. Note \u0415\u0441\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0441 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0442\u043e \u043e\u043d \u043d\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e, \u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 dict.update(). \u042f \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c from_tense_file_source \u0434\u043b\u044f \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0430, \u043d\u043e \u0441\u0443\u0442\u044c \u0412\u044b \u043f\u043e\u043d\u044f\u043b\u0438. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # \u0414\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0432\u0435\u0434\u044c \u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e # \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0432\u043d\u0430 60 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043c, \u0430, \u043a\u0430\u043a \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044c \u0440\u0430\u043d\u0435\u0435, \u043a\u043e\u043d\u0444\u0438\u0433 \u043f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c \u0432\u0438\u0434\u0435 # \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 **\u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f** \u043d\u0430 \u043d\u043e\u0432\u044b\u0439, \u0430 **\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f** \u043d\u043e\u0432\u044b\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 dict.update(). aliases = \u0441, \u0441\u0435\u043a, \u0441\u0435\u043a\u0443\u043d\u0434\u0430, \u0441\u0435\u043a\u0443\u043d\u0434, \u0441\u0435\u043a\u0443\u043d\u0434\u044b # \u041d\u043e \u0442\u0443\u0442 \u0443\u0436\u0435 \u0441\u0442\u0430\u0440\u044b\u0435 \u0430\u043b\u0438\u0430\u0441\u044b \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f. [virtual] aliases = \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435, \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u044f duration = exp(year * 1000) \"\"\" time_string = \"1 \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435 \u0438 20 \u0441\u0435\u043a\u0443\u043d\u0434...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D \u0418 \u0442\u0443\u0442 \u041e\u0441\u0442\u0430\u043f\u0430 \u043f\u043e\u043d\u0435\u0441\u043b\u043e... \u041f\u043e \u0445\u043e\u0434\u0443 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u044f \u0437\u0430\u043c\u0435\u0442\u0438\u043b \u043e\u0434\u043d\u0443 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0443\u044e \u0444\u0438\u0448\u043a\u0443. \u041f\u043e \u0441\u0443\u0442\u0438-\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0430\u0435\u0442 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c VCONVERTER_CONSTS (\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u0430 year * 10 ) \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0443\u0434\u0430 \u043d\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = \u0432\u0435\u043a, \u0432\u0435\u043a\u043e\u0432 duration = exp(\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435 * 10) \"\"\" time_string = \"1 \u0432\u0435\u043a\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500 \u0422\u0435\u0440\u043c\u0438\u043d\u044b \u041f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u0442\u0440\u043e\u043a\u0430 \u0441\u043e \u0441\u0442\u0440\u043e\u0433\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c\u044e `(\u0447\u0438\u0441\u043b\u043e, \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438)` 1. 1\u0434\u0435\u043d\u044c 2 \u043c\u0438\u043d\u0443\u0442\u044b5\u0441\u0435\u043a\u0443\u043d\u0434 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u0442\u0440\u043e\u043a\u0430 \u0441 \u043d\u0435\u0441\u0442\u0440\u043e\u0433\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c\u044e `(\u0441\u043b\u043e\u0432\u043e..*, \u0447\u0438\u0441\u043b\u043e, \u0441\u043b\u043e\u0432\u043e..*, \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438)` 1. \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0439, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, 1 \u0432\u0447\u0435\u0440\u0430\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0410\u043b\u0438\u0430\u0441(\u044b) \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u043b\u043e\u0432\u0430-\u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u044b \u0434\u043b\u044f \u0447\u0435\u0433\u043e-\u043b\u0438\u0431\u043e (\u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 - \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u044b \u0434\u043b\u044f \u0435\u0434\u0435\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] \u0420\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0430\u0434\u0430\u043f\u0442\u0438\u0440\u0443\u0435\u0442 (\u043f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442) \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0435\u0440\u0430.","title":"Russian"},{"location":"ru_faq/#tense","text":"tense - \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u041d\u0443\u0436\u043d\u043e \u043b\u0438 \u0412\u0430\u043c \u0431\u044b\u043b\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0442\u0438\u043f\u0430 \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" \u0432 \u043a\u043e\u043b-\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 datetime.timedelta? \u041d\u0435\u0442? \u0422\u043e\u0433\u0434\u0430 \u043f\u043e\u0441\u043e\u0432\u0435\u0442\u0443\u0439\u0442\u0435 \u043d\u0430\u0441 \u0441\u0432\u043e\u0438\u043c \u0434\u0440\u0443\u0437\u044c\u044f\u043c :) \u0410 \u0435\u0441\u043b\u0438 \u0432\u044b \u0432\u0441\u0451 \u0435\u0449\u0451 \u0437\u0434\u0435\u0441\u044c - \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c!","title":"\u0427\u0442\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 tense?"},{"location":"ru_faq/#tense_1","text":"tense \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u0442\u0430\u043a, \u0447\u0442\u043e\u0431 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0433\u0438\u0431\u043a\u043e\u0441\u0442\u044c , \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441\u0440\u0430\u0437\u0443, \u043a\u0430\u043a \u043a\u043b\u0430\u0441\u0441 \u0438\u043b\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u044f: from tense import TenseParser , from_tense_file , from_tense_file_source \u0410 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0447\u0430\u0441\u0442\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u043c\u043e\u0434\u0443\u043b\u0438: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository \u0422\u0430\u043a\u043e\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0441\u0434\u0435\u043b\u0430\u043d \u0432\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u043d\u0438\u0435 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u043c\u043f\u043e\u0440\u0442\u043e\u0432 \u0438 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u0441\u0442\u0438\u043b\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0430.","title":"\u041a\u0430\u043a \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d tense?"},{"location":"ru_faq/#_1","text":"\u041d\u0430\u0447\u043d\u0451\u043c \u0441 \u043e\u0441\u043d\u043e\u0432, \u0434\u043e\u0441\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0430 \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\", \u043a\u0430\u043a \u043d\u0430\u043c \u0435\u0451 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0432, \u043a\u0430\u043a \u0440\u0430\u043d\u0435\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044c, \u043a\u043e\u043b-\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u0438\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 datetime.timedelta? - \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c! from tense import TenseParser time_string = \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT ) >>> parser . parse ( time_string ) 0 \u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435-\u043a\u0430, 0? \u0418 \u044d\u0442\u043e \u0432\u0441\u0451? - \u041d\u0435\u0442. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0430\u043b\u0438\u0430\u0441\u044b \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430, \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0430\u043c\u0438! \u0421\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435: from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u043c\u0438\u043d\u0443\u0442\u0430\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1\u0434\u0435\u043d\u044c1\u043c\u0438\u043d\u0443\u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) >>> parser . parse ( time_string ) 86480 \u0412\u043e\u0442, \u0434\u0440\u0443\u0433\u043e\u0435 \u0434\u0435\u043b\u043e!","title":"\u0421 \u0447\u0435\u0433\u043e \u043d\u0430\u0447\u0430\u0442\u044c?"},{"location":"ru_faq/#tenseparser","text":"TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : \u0421\u043c. \u043d\u0430 github \u041f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c TenseParser \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 \u043e\u0442 tense.application.ports.parsers.AbstractParser . \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0435\u0441\u0442\u044c \u0443\u0436\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0433\u043e\u0442\u043e\u0432\u044b\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a TenseParser.DIGIT - tense.adapters.parsers.DigitParser \u0438 TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0438 \u0441\u0432\u043e\u0438 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043f\u0430\u0440\u0441\u0435\u0440\u044b, \u043f\u0440\u0435\u0436\u0434\u0435 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0432 tense.application.ports.parsers.AbstractParser \u0412 TenseParser.__new__ \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0430\u044f \"\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\" \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0432 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u043e\u0432 ...AbstractParser , \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0438\u0442\u043e\u0433\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0433\u043e\u0442\u043e\u0432\u044b\u0439 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 ...AbstractParser .","title":"\u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 TenseParser?"},{"location":"ru_faq/#_2","text":"\u0415\u0441\u043b\u0438 \u0432\u0430\u0448\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u043c-\u0442\u043e \u043d\u0430 \u043f\u043e\u0434\u043e\u0431\u0438\u0438 \"1 \u0434\u0435\u043d\u044c + 2 \u043c\u0438\u043d\u0443\u0442\u044b \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\", \u0442\u043e, \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0421\u043f\u0440\u043e\u0441\u0438\u0442\u0435, \u043f\u043e\u0447\u0435\u043c\u0443 \u0442\u0430\u043a? - \u0414\u0435\u043b\u043e \u0432 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0435 (time_resolver). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441\u0442\u043e\u0438\u0442 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438, \u0434\u0430\u043d\u043d\u0430\u044f \u0436\u0435 \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u043e\u0439 (\u0441\u043c. \u0432 \u043a\u043e\u043d\u0446\u0435 FAQ \u0442\u0435\u0440\u043c\u0438\u043d\u044b). \u041f\u043e\u043c\u0438\u043c\u043e \"\u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u043e\u0433\u043e\" \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0442\u043e\u0438\u0442 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0442\u0430\u043a \u0436\u0435 \u0435\u0441\u0442\u044c \u0438 \"\u0443\u043c\u043d\u044b\u0439\". Info tense.application.resolvers.smart_resolver() \u0442\u0430\u043a \u0436\u0435 \u043d\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u0435\u043d \u043a \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443. \u0421\u043c. \u043d\u0430 github Note \u0422\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0438 \u0441 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u043c\u0438, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u0443 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430 \u0435\u0441\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 (arg1: str, arg2: model.Tense). from tense import TenseParser , units , resolvers from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u043c\u0438\u043d\u0443\u0442\u044b\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1 \u0434\u0435\u043d\u044c + 2 \u043c\u0438\u043d\u0443\u0442\u044b \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525","title":"\u041f\u043e\u0447\u0435\u043c\u0443 \u043c\u043e\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u0441\u044f?"},{"location":"ru_faq/#converter-tenseparser","text":"\u0423 \u043a\u043b\u0430\u0441\u0441\u0430 ...AbstractParser \u0435\u0441\u0442\u044c \u043c\u0435\u0442\u043e\u0434 parse, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0435\u0440\u0435\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 ._parse() \u0438\u0437 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u043e\u0432, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u043e\u043c, \u0435\u0441\u043b\u0438 \u0442\u043e\u0442 \u043d\u0435 \u0440\u0430\u0432\u0435\u043d None. Note \u041c\u044b \u0441\u0442\u0430\u0440\u0430\u0435\u043c\u0441\u044f \u0441\u0434\u0435\u043b\u0430\u0442\u044c tense \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u043e\u043b\u0435\u0435 \u0433\u0438\u0431\u043a\u0438\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u0445\u0443\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e-\u0441\u0432\u043e\u0435\u043c\u0443 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043c\u0435\u0441\u0442\u043e. \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c, \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439, \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0439, \u043f\u0440\u0435\u0436\u0434\u0435 \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0432 \u0435\u0433\u043e \u043e\u0442 tense.application.ports.converters.AbstractConverter. \u0422\u0430\u043a \u0436\u0435 \u0441\u0442\u043e\u0438\u0442 \u0443\u0447\u0435\u0441\u0442\u044c \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e ...AbstractConverter \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0436\u0435\u043d\u0435\u0440\u0438\u043a\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u0438\u043f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u0438 (\u0435\u0433\u043e \u0436\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 .convert()).","title":"\u0410 \u0447\u0442\u043e \u0437\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \"converter\" \u0443 TenseParser?"},{"location":"ru_faq/#deletereplace","text":"\u0410\u0442\u043e\u043c\u0430\u0440\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 tense \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u043c UnitOfWork , \u043a\u043e\u0442\u043e\u0440\u044b\u0439, \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u0430\u043b\u0438\u0430\u0441\u043e\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 # <--- \u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0441\u0430\u0445\u0430\u0440 \"with\" \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0442\u044c \u0443\u0447\u0430\u0441\u0442\u043a\u0438 \u043a\u043e\u0434\u0430 \u043d\u0430 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0431\u043b\u043e\u043a\u0438 ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0430 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \"second\" \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0430\u043b\u0438\u0430\u0441\u0430\u0445 units.Second uow . delete_aliases ( units . Second , [ \"second\" ]) # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0430\u043b\u0438\u0430\u0441 \u0443 units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \u0443\u0434\u0430\u043b\u0451\u043d. \u0417\u0430\u043c\u0435\u043d\u0430 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 \u043f\u0443\u0442\u044c \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0430 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0438\u0430\u0441 \"second\" \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0430\u043b\u0438\u0430\u0441\u0430\u0445 units.Second uow . replace_aliases ( units . Second , { \"second\" : \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" }) # \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0430\u043b\u0438\u0430\u0441 \"second\" \u043d\u0430 \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0430\u043b\u0438\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d\u044b assert \"second\" not in alias_state # \u0410\u043b\u0438\u0430\u0441 \"second\" \u0443\u0434\u0430\u043b\u0451\u043d assert \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" in alias_state # \u0412\u043c\u0435\u0441\u0442\u043e \"second\" \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u0430\u043b\u0438\u0430\u0441 - \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" \u0414\u0430\u043b\u0435\u0435 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0438\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0432 TenseParser(tenses=uow.products.config)","title":"\u0410 \u0447\u0442\u043e \u043d\u0430\u0441\u0447\u0451\u0442 delete/replace \u0430\u043b\u0438\u0430\u0441\u043e\u0432?"},{"location":"ru_faq/#_3","text":"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432 tense.domain.units \u0432\u044b\u0434\u0435\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 - VirtualUnit. \u041e\u043d \u043d\u0438\u0447\u0435\u043c \u043d\u0435 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 ..Unit, \u043d\u043e \u0443\u0434\u043e\u0431\u0435\u043d \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u043e\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u0438, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0449\u0435\u043c - \u043d\u043e\u0432\u044b\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"\u0434\u0432\u0435\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ], duration = 2 ) ) # \u0438\u043b\u0438 . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"\u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 \u0434\u0432\u0435\u0441\u0435\u043a\u0443\u043d\u0434\u044b 1 \u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u044b\" ) == 5","title":"\u041a\u0430\u043a \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u0438 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438?"},{"location":"ru_faq/#_4","text":"\u041d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0437\u0433\u043b\u044f\u0434 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043d\u0435\u043f\u043e\u043d\u044f\u0442\u043d\u044b\u043c, \u043a\u0430\u043a \u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433 \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438. \u041d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0436 \u043e\u043d\u0430 (\u0440\u0435\u0434. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f) \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0430! \u041a\u043e\u043d\u0444\u0438\u0433 tense \u043d\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0444\u0430\u0439\u043b\u043e\u0432 \u0438\u043b\u0438 \u0438\u0445 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044e, \u043d\u043e \u043c\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u043f\u0440\u0438\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430 - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \".tense\". \u041f\u0430\u0440\u0441\u0435\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0444\u0430\u0439\u043b\u043e\u0432 tense \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432, \u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0438 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043d\u0438\u0445. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u043d\u0438\u0435\u043c \u0442\u0438\u043f\u0430 (variable = value). \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b, \u0435\u0441\u043b\u0438 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u0434\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d - \u0432\u043e\u0437\u0431\u0443\u0434\u0438\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 ValueError. \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = 123). \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0431\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = True|False|true|false). Danger \u0421\u043f\u0438\u0441\u043a\u0438 \u0432 tense \u043f\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0443 \u0441\u0445\u043e\u0436\u0438 \u0441 \u043a\u043e\u0440\u0442\u0435\u0436\u0430\u043c\u0438 python. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0430, \u0442\u043e \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0435\u0433\u043e \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439, \u0438\u043d\u0430\u0447\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0430. \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0441\u043f\u0438\u0441\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 (variable = 1, 2, 3). \u0421\u0442\u043e\u0438\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u0441\u043f\u0438\u0441\u043a\u0430 - \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e. \u043f\u0430\u0442\u0442\u0435\u0440\u043d python-list \u0441 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u043c\u0438 \u0441\u043a\u043e\u0431\u043a\u0430\u043c\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044e\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u043d\u0430 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b. !!! note: \u0412\u0441\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u043c\u0438. \u0414\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0430\u0440\u043a\u0435\u0440 \"exp(do stuff here)\" (exp. \u043e\u0442 expression - \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435). \u041e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 (variable = exp(6 * 6)). !!! info: \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0432 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0431\u044b\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b: - second: 1 - minute: 60 - hour: 60 * 60 - day: 60 * 60 * 24 - week: 60 * 60 * 24 * 7 - year: 60 * 60 * 24 * 365 \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f: \"duration = exp(year * 10)\" # \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u044f! \u0422\u0430\u043a \u0436\u0435 \u0441\u0442\u043e\u0438\u0442 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0434\u0430\u0436\u0435 \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 duration \u0443 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438\u0437 units.Unit, \u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0432 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u0445 \u0432\u0441\u0451 \u0440\u0430\u0432\u043d\u043e \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u0441 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043e\u043d\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0451\u043c \u0438 \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u0430\u043d\u044b. \u0415\u0441\u043b\u0438 \u0443\u0433\u043b\u0443\u0431\u043b\u044f\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043b\u0435\u043a\u0441\u0438\u043d\u0433\u0430, \u0442\u043e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430, \u0433\u0440\u0443\u0431\u043e \u0433\u043e\u0432\u043e\u0440\u044f, \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u042d\u0442\u0438 \u0436\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 (AbstractParticleConverter) \u0438 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b (AbstractParticleValueConverter) \u044d\u0442\u043e \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, \u0440\u044f\u0434\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0445, \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e, \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0443\u0449\u0435\u043c. \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 (\u0442\u043e\u043a\u0435\u043d\u0430/\u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0430, \u0434\u0430\u043b\u044c\u0448\u0435 \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \"\u043f\u0430\u0440\u0442\u0438\u043a\u043b\" - dot_tense.domain.HashableParticle) \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0435\u0439\u0442 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0412 \u0441\u0432\u043e\u044e \u0436\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430 \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0440\u0435\u0434\u0438\u043a\u0435\u0439\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u0441\u0435\u0431\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0421\u0430\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 \"chain_of_responsibility\", \u0433\u0434\u0435 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 (\u0448\u0430\u0433\u0430) \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u0437\u0430\u0434\u0430\u0447\u0430. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043e 3 \u044d\u0442\u0430\u043f\u0430: LexingStep, AnalyzeStep, CompilingStep. \u0421\u043c. \u043d\u0430 github Note \u041f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043c\u044b \u043d\u0430\u0447\u043d\u0451\u043c \u0440\u0430\u0437\u0431\u043e\u0440 \u044d\u0442\u0430\u043f\u043e\u0432 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0441\u0442\u043e\u0438\u0442 \u0443\u0442\u043e\u0447\u043d\u0438\u0442\u044c, \u0447\u0442\u043e \u0430\u043d\u0430\u043b\u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (\u0438\u043b\u0438 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e, \u0431\u0435\u0437 \u0440\u0430\u0437\u043d\u0438\u0446\u044b) \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0442\u043e\u0438\u0442 \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a, \u043f\u0440\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e-\u0432\u043e\u0442 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u044d\u0442\u0430\u043f\u044b \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430. \u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u044d\u0442\u0430\u043f\u0435, LexingStep, \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0440\u0430\u0437\u0431\u043e\u0440 \u0441\u0442\u0440\u043e\u043a \u043d\u0430 \u043f\u0430\u0440\u0442\u0438\u043a\u043b\u044b (\u0442\u043e\u043a\u0435\u043d\u044b). \u041d\u0430 \u0432\u0442\u043e\u0440\u043e\u043c \u044d\u0442\u0430\u043f\u0435, AnalyzeStep, \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438. \u041d\u0430 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u044d\u0442\u0430\u043f\u0435, CompilingStep, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0420\u0430\u0437\u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0421\u043c. \u043d\u0430 github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Abs tra c t Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, }","title":"\u0424\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438"},{"location":"ru_faq/#_5","text":"\u041d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0432\u0438\u0434 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 - \u0440\u0435\u0448\u0451\u0442\u043a\u0430 \"#\".","title":"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438"},{"location":"ru_faq/#_6","text":"[model.Tense] Attention \u0414\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432 \u041b\u042e\u0411\u041e\u041c \u0441\u043b\u0443\u0447\u0430\u0435. multiplier - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u0445 (\u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a DigitParser \u0438 \u0435\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u044b) \u043c\u043d\u043e\u0436\u0438\u0442\u0435\u043b\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438. [virtual] Note \u0412 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0434\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u044e\u043d\u0438\u0442\u043e\u0432. \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f [model.Tense] [virtual] aliases = \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435, \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0439 duration = year * 10 [virtual] aliases = \u0432\u0435\u043a, \u0432\u0435\u043a\u043e\u0432 duration = year * 100 [virtual] aliases = \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435, \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u044f duration = year * 1000 duration aliases - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u044e\u043d\u0438\u0442\u0430). [units.Second] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 1 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434\u044b. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0441\u0435\u043a\u0443\u043d\u0434\u044b). [units.Minute] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043c\u0438\u043d\u0443\u0442\u044b. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043c\u0438\u043d\u0443\u0442\u044b). [units.Hour] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0447\u0430\u0441\u0430. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"h\", \"hour\", \"hours\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0447\u0430\u0441\u0430). [untits.Day] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"d\", \"day\", \"days\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0434\u043d\u044f). [units.Week] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 * 7 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435\u0434\u0435\u043b\u0438. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"w\", \"week\", \"weeks\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u043d\u0435\u0434\u0435\u043b\u0438). [units.Year] duration aliases - \u0422\u0438\u043f: `integer` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 60 * 60 * 24 * 365 - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0433\u043e\u0434\u0430. - \u0422\u0438\u043f: `list[string]` - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432 \u0448\u0430\u0431\u043b\u043e\u043d\u0435: `[\"y\", \"year\", \"years\"]` - \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0443\u0447\u0430\u0435 - \u0433\u043e\u0434\u0430).","title":"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438"},{"location":"ru_faq/#-","text":"\u041d\u043e, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043c\u044b \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c \u043a \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435, \u0441\u0442\u043e\u0438\u0442 \u0443\u0437\u043d\u0430\u0442\u044c \u0447\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f from_tense_file \u043e\u0442 from_tense_file_source . \u0412\u0440\u043e\u0434\u0435 \u0431\u044b \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0430 \u0432\u0440\u043e\u0434\u0435 \u0438 \u043d\u0435\u0442... \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0432\u0441\u0451 \u0441\u0435\u0439\u0447\u0430\u0441 \u043e\u0431\u044a\u044f\u0441\u043d\u044e! from_tense_file \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438, \u0447\u0438\u0442\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u044b\u0437\u043e\u0432 from_tense_file_source , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u043f\u0430\u0440\u0441\u0438\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0430. Note \u0415\u0441\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0441 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0438\u043b\u0438 \u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0442\u043e \u043e\u043d \u043d\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e, \u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 dict.update(). \u042f \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c from_tense_file_source \u0434\u043b\u044f \u044d\u043c\u0443\u043b\u044f\u0446\u0438\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0430, \u043d\u043e \u0441\u0443\u0442\u044c \u0412\u044b \u043f\u043e\u043d\u044f\u043b\u0438. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # \u0414\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0432\u0435\u0434\u044c \u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e # \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0432\u043d\u0430 60 \u0441\u0435\u043a\u0443\u043d\u0434\u0430\u043c, \u0430, \u043a\u0430\u043a \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044c \u0440\u0430\u043d\u0435\u0435, \u043a\u043e\u043d\u0444\u0438\u0433 \u043f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c \u0432\u0438\u0434\u0435 # \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 **\u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f** \u043d\u0430 \u043d\u043e\u0432\u044b\u0439, \u0430 **\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f** \u043d\u043e\u0432\u044b\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 dict.update(). aliases = \u0441, \u0441\u0435\u043a, \u0441\u0435\u043a\u0443\u043d\u0434\u0430, \u0441\u0435\u043a\u0443\u043d\u0434, \u0441\u0435\u043a\u0443\u043d\u0434\u044b # \u041d\u043e \u0442\u0443\u0442 \u0443\u0436\u0435 \u0441\u0442\u0430\u0440\u044b\u0435 \u0430\u043b\u0438\u0430\u0441\u044b \u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f. [virtual] aliases = \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435, \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u044f duration = exp(year * 1000) \"\"\" time_string = \"1 \u0442\u044b\u0441\u044f\u0447\u0435\u043b\u0435\u0442\u0438\u0435 \u0438 20 \u0441\u0435\u043a\u0443\u043d\u0434...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D \u0418 \u0442\u0443\u0442 \u041e\u0441\u0442\u0430\u043f\u0430 \u043f\u043e\u043d\u0435\u0441\u043b\u043e... \u041f\u043e \u0445\u043e\u0434\u0443 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u044f \u0437\u0430\u043c\u0435\u0442\u0438\u043b \u043e\u0434\u043d\u0443 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0443\u044e \u0444\u0438\u0448\u043a\u0443. \u041f\u043e \u0441\u0443\u0442\u0438-\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0430\u0435\u0442 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c VCONVERTER_CONSTS (\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u044b \u0434\u043b\u044f \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u0430 year * 10 ) \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0443\u0434\u0430 \u043d\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = \u0432\u0435\u043a, \u0432\u0435\u043a\u043e\u0432 duration = exp(\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0435\u0442\u0438\u0435 * 10) \"\"\" time_string = \"1 \u0432\u0435\u043a\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f - \u0441 \u0442\u0435\u043e\u0440\u0438\u0435\u0439 \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0438\u0441\u044c, \u0442\u0435\u043f\u0435\u0440\u044c \u043a \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435!"},{"location":"ru_faq/#_7","text":"\u041f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u0442\u0440\u043e\u043a\u0430 \u0441\u043e \u0441\u0442\u0440\u043e\u0433\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c\u044e `(\u0447\u0438\u0441\u043b\u043e, \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438)` 1. 1\u0434\u0435\u043d\u044c 2 \u043c\u0438\u043d\u0443\u0442\u044b5\u0441\u0435\u043a\u0443\u043d\u0434 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u0442\u0440\u043e\u043a\u0430 \u0441 \u043d\u0435\u0441\u0442\u0440\u043e\u0433\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0441\u0442\u044c\u044e `(\u0441\u043b\u043e\u0432\u043e..*, \u0447\u0438\u0441\u043b\u043e, \u0441\u043b\u043e\u0432\u043e..*, \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438)` 1. \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0439, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, 1 \u0432\u0447\u0435\u0440\u0430\u0448\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0410\u043b\u0438\u0430\u0441(\u044b) \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0421\u043b\u043e\u0432\u0430-\u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u044b \u0434\u043b\u044f \u0447\u0435\u0433\u043e-\u043b\u0438\u0431\u043e (\u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 - \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c\u044b \u0434\u043b\u044f \u0435\u0434\u0435\u043d\u0438\u0446 \u0432\u0440\u0435\u043c\u0435\u043d\u0438). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] \u0420\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440 \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0430\u0434\u0430\u043f\u0442\u0438\u0440\u0443\u0435\u0442 (\u043f\u043e\u0434\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442) \u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0435\u0440\u0430.","title":"\u0422\u0435\u0440\u043c\u0438\u043d\u044b"},{"location":"uk_faq/","text":"\u041f\u0440\u043e\u0435\u043a\u0442: tense \u041b\u0456\u0446\u0435\u043d\u0437\u0456\u044f: Apache 2.0 \u041f\u0440\u043e \u043f\u0440\u043e\u0435\u043a\u0442: \u0406\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u0447\u0430\u0441\u0443 \u041e\u043f\u0435\u0440\u0430\u0446\u0456\u0439\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430: \u041d\u0435\u0437\u0430\u043b\u0435\u0436\u043d\u0438\u0439 Python: 3.9+ Typing: Typed \u0422\u0435\u043c\u0430: \u0423\u0442\u0438\u043b\u0456\u0442\u0438 PyPi \u00b7 \u0421\u043f\u043e\u0432\u0456\u0441\u0442\u0438\u0442\u0438 \u043f\u0440\u043e \u0411\u0430\u0433 \u00b7 \u0417\u0430\u043f\u0440\u043e\u043f\u043e\u043d\u0443\u0432\u0430\u0442\u0438 \u0406\u0434\u0435\u044e \u0429\u043e \u044f\u0432\u043b\u044f\u0454 \u0441\u043e\u0431\u043e\u044e tense? tense - \u0456\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u0447\u0430\u0441\u0443. \u0427\u0438 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0412\u0430\u043c \u0431\u0443\u043b\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0440\u044f\u0434\u043e\u043a \u0442\u0438\u043f\u0443 \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" \u0432 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0431\u043e \u043e\u0431'\u0454\u043a\u0442 datetime.timedelta? \u041d\u0456? \u0422\u043e\u0434\u0456 \u043f\u043e\u0440\u0430\u0434\u044c\u0442\u0435 \u043d\u0430\u0441 \u0441\u0432\u043e\u0457\u043c \u0434\u0440\u0443\u0437\u044f\u043c:) \u0410 \u044f\u043a\u0449\u043e \u0432\u0438 \u0432\u0441\u0435 \u0449\u0435 \u0442\u0443\u0442 \u2013 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0438\u043c\u043e! \u042f\u043a \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432\u0430\u043d\u0438\u0439 tense? tense \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432\u0430\u043d\u0438\u0439 \u0442\u0430\u043a, \u0449\u043e\u0431 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0438\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443 \u0433\u043d\u0443\u0447\u043a\u0456\u0441\u0442\u044c , \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u0456\u0441\u0442\u044c \u0442\u0430 \u0437\u0440\u0443\u0447\u043d\u0456\u0441\u0442\u044c \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0435\u0432\u0456. \u0414\u0435\u044f\u043a\u0430 \u043b\u043e\u0433\u0456\u043a\u0430 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u0454\u0442\u044c\u0441\u044f \u043e\u0434\u0440\u0430\u0437\u0443, \u044f\u043a \u043a\u043b\u0430\u0441 \u0430\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u044f: from tense import TenseParser , from_tense_file , from_tense_file_source \u0410 \u0434\u0435\u044f\u043a\u0456 \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u044e\u0442\u044c\u0441\u044f \u044f\u043a \u043c\u043e\u0434\u0443\u043b\u0456: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository \u0422\u0430\u043a\u0438\u0439 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e, \u0449\u043e\u0431 \u0443\u043d\u0438\u043a\u043d\u0443\u0442\u0438 \u0431\u0443\u0434\u044c-\u044f\u043a\u0438\u0445 \u0446\u0438\u043a\u043b\u0456\u0447\u043d\u0438\u0445 \u0456\u043c\u043f\u043e\u0440\u0442\u0456\u0432 \u0456 \u0454 \u043e\u0441\u043d\u043e\u0432\u043d\u0438\u043c \u0441\u0442\u0438\u043b\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0443. \u0417 \u0447\u043e\u0433\u043e \u043f\u043e\u0447\u0430\u0442\u0438? \u041f\u043e\u0447\u043d\u0435\u043c\u043e \u0437 \u043e\u0441\u043d\u043e\u0432, \u043f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u043e, \u0443 \u043d\u0430\u0441 \u0454 \u0440\u044f\u0434\u043e\u043a \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\", \u044f\u043a \u043d\u0430\u043c \u0457\u0457 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u043d\u0430, \u044f\u043a \u0440\u0430\u043d\u0456\u0448\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044f, \u0443 \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0431\u043e \u043e\u0431'\u0454\u043a\u0442 datetime.timedelta? - \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e! from tense import TenseParser time_string = \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT ) >>> parser . parse ( time_string ) 0 \u0417\u0430\u0447\u0435\u043a\u0430\u0439\u0442\u0435, 0? \u0406 \u0446\u0435 \u0432\u0441\u0435? - \u041d\u0456. \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u044e\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u0434\u0435\u044f\u043a\u0456 \u0430\u043b\u0456\u0430\u0441\u0438 \u0430\u043d\u0433\u043b\u0456\u0439\u0441\u044c\u043a\u043e\u0457 \u043c\u043e\u0432\u0438, \u0440\u0435\u0448\u0442\u0443 \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0434\u0430\u0442\u0438 \u0441\u0430\u043c\u0456! \u0414\u0438\u0432. \u043f\u0440\u0438\u043a\u043b\u0430\u0434 \u043d\u0438\u0436\u0447\u0435: from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u0445\u0432\u0438\u043b\u0438\u043d\u0430\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , config = tenses . config ) >>> parser . parse ( time_string ) 86480 \u041e\u0441\u044c \u0456\u043d\u0448\u0430 \u0441\u043f\u0440\u0430\u0432\u0430! \u042f\u043a \u043f\u0440\u0430\u0446\u044e\u0454 TenseParser? TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : \u0414\u0438\u0432. \u043d\u0430 github \u041f\u0435\u0440\u0448\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c TenseParser \u043f\u0440\u0438\u0439\u043c\u0430\u0454 \u043f\u0456\u0434\u043a\u043b\u0430\u0441 \u0432\u0456\u0434 tense.application.ports.parsers.AbstractParser . \u0421\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0432\u0436\u0435 \u0454 \u0434\u0435\u044f\u043a\u0456 \u0433\u043e\u0442\u043e\u0432\u0456 \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u0457, \u0442\u0430\u043a\u0456 \u044f\u043a TenseParser.DIGIT - tense.adapters.parsers.DigitParser \u0442\u0430 TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u0456 \u0441\u0432\u043e\u0457 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0456 \u043f\u0430\u0440\u0441\u0435\u0440\u0438, \u043f\u0435\u0440\u0448 \u0437\u0430 \u0432\u0441\u0435 \u0443\u0441\u043f\u0430\u0434\u043a\u0443\u0432\u0430\u0432\u0448\u0438 tense.application.ports.parsers.AbstractParser \u0423 TenseParser.__new__ \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u043d\u0435\u0432\u0435\u043b\u0438\u043a\u0430 \"\u043e\u0431\u0440\u043e\u0431\u043a\u0430\" \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u044f\u043a\u0456 \u043d\u0430\u0434\u0430\u043b\u0456 \u0431\u0443\u0434\u0443\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0456 \u0432 \u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u0430\u0442\u043e\u0440\u0438 \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0456\u0432 ...AbstractParser , \u0437\u0440\u0435\u0448\u0442\u043e\u044e \u043c\u0438 \u043e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e \u0433\u043e\u0442\u043e\u0432\u0438\u0439 \u043f\u0456\u0434\u043a\u043b\u0430\u0441 ...AbstractParser . \u0427\u043e\u043c\u0443 \u043c\u0456\u0439 \u0440\u044f\u0434\u043e\u043a \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u044c\u0441\u044f? \u042f\u043a\u0449\u043e \u0432\u0430\u0448 \u0440\u044f\u0434\u043e\u043a \u0454 \u0447\u0438\u043c\u043e\u0441\u044c \u043f\u043e\u0434\u0456\u0431\u043d\u0438\u043c \u0434\u043e \"1 \u0434\u0435\u043d\u044c + 2 \u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0456 5 \u0441\u0435\u043a\u0443\u043d\u0434\", \u0442\u043e, \u0448\u0432\u0438\u0434\u0448\u0435 \u0437\u0430 \u0432\u0441\u0435, \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u043e\u0441\u0442\u0430\u043d\u043d\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u0417\u0430\u043f\u0438\u0442\u0430\u0454\u0442\u0435, \u0447\u043e\u043c\u0443 \u0446\u0435 \u0442\u0430\u043a? - \u0421\u043f\u0440\u0430\u0432\u0430 \u0432 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0456 (time_resolver). \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0441\u0442\u043e\u0457\u0442\u044c \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u044f\u043a\u0438\u0439 \u0432\u0456\u0434\u043c\u0456\u043d\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0454\u0442\u044c\u0441\u044f \u0437 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u0438\u043c\u0438 \u0440\u044f\u0434\u043a\u0430\u043c\u0438, \u0446\u0435\u0439 \u0436\u0435 \u0440\u044f\u0434\u043e\u043a \u0454 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0438\u043c (\u0434\u0438\u0432. \u043d\u0430\u043f\u0440\u0438\u043a\u0456\u043d\u0446\u0456 FAQ \u0413\u043b\u043e\u0441\u0430\u0440\u0456\u0439). \u041a\u0440\u0456\u043c \"\u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u043e\u0433\u043e\" \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430, \u0449\u043e \u0441\u0442\u043e\u0457\u0442\u044c \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c, \u0442\u0430\u043a \u0441\u0430\u043c\u043e \u0454 \u0456 \"\u0440\u043e\u0437\u0443\u043c\u043d\u0438\u0439\". Info tense.application.resolvers.smart_resolver() \u0442\u0430\u043a\u043e\u0436 \u043d\u0435 \u0447\u0443\u0442\u043b\u0438\u0432\u0438\u0439 \u0434\u043e \u0440\u0435\u0433\u0456\u0441\u0442\u0440\u0443. \u0414\u0438\u0432. \u043d\u0430 github Note \u0422\u0430\u043a \u0441\u0430\u043c\u043e \u044f\u043a \u0456 \u0437 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u043c\u0438, \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0441\u0432\u0456\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0439 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u0442\u0456\u043b\u044c\u043a\u0438 \u043d\u0435 \u0437\u0430\u0431\u0443\u0432\u0430\u0439\u0442\u0435, \u0449\u043e \u0443 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430 \u0454 \u0431\u0430\u0437\u043e\u0432\u0430 \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 (arg1: str, arg2: model.Tense). from tense import TenseParser , units , resolvers from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u0445\u0432\u0438\u043b\u0438\u043d\u0438\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1 \u0434\u0435\u043d\u044c + 2 \u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525 \u0410 \u0449\u043e \u0437\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \"converter\" \u0443 TenseParser? \u0423 \u043a\u043b\u0430\u0441\u0443 AbstractParser \u0454 \u043c\u0435\u0442\u043e\u0434 parse, \u044f\u043a\u0438\u0439 \u043d\u0435 \u043c\u043e\u0436\u043d\u0430 \u043f\u0435\u0440\u0435\u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438. \u0423 \u0446\u044c\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0443 ._parse() \u0437 \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0456\u0432, \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u044f\u043a\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e \u0434\u043e \u0437\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430, \u044f\u043a\u0449\u043e \u0442\u043e\u0439 \u043d\u0435 \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 None. Note \u041c\u0438 \u043d\u0430\u043c\u0430\u0433\u0430\u0454\u043c\u043e\u0441\u044f \u0437\u0440\u043e\u0431\u0438\u0442\u0438 tense \u044f\u043a\u043e\u043c\u043e\u0433\u0430 \u0433\u043d\u0443\u0447\u043a\u0456\u0448\u0438\u043c, \u0442\u043e\u043c\u0443 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u043e \u043a\u043e\u0436\u0435\u043d \u0445\u0443\u043a \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0435\u0430\u043b\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u043f\u043e-\u0441\u0432\u043e\u0454\u043c\u0443 \u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u0438 \u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u043c\u0456\u0441\u0446\u0435. \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u043d\u0435 \u0454 \u0432\u0438\u043d\u044f\u0442\u043a\u043e\u043c, \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0441\u0432\u0456\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0439, \u043f\u0435\u0440\u0448 \u0443\u0441\u043f\u0430\u0434\u043a\u0443\u0432\u0430\u0432\u0448\u0438 \u0439\u043e\u0433\u043e \u0432\u0456\u0434 tense.application.ports.converters.AbstractConverter. \u0422\u0430\u043a\u043e\u0436 \u0432\u0430\u0440\u0442\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0442\u043e\u0439 \u0444\u0430\u043a\u0442, \u0449\u043e ...AbstractConverter \u0454 \u0434\u0436\u0435\u043d\u0435\u0440\u0438\u043a\u043e\u043c, \u044f\u043a\u0438\u0439 \u043d\u0430\u0431\u0443\u0432\u0430\u0454 \u0442\u0438\u043f\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0435 \u0431\u0443\u0434\u0435 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0456 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0456\u0457 (\u0439\u043e\u0433\u043e \u0436 \u0456 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0432 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0456 .convert()). \u0410 \u0449\u043e \u0449\u043e\u0434\u043e delete/replace \u0430\u043b\u0456\u0430\u0441\u0456\u0432? \u0410\u0442\u043e\u043c\u0430\u0440\u043d\u0456 \u043e\u043f\u0435\u0440\u0430\u0446\u0456\u0457 \u0432 tense \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u043f\u0430\u0442\u0435\u0440\u043d\u043e\u043c UnitOfWork , \u044f\u043a\u0438\u0439, \u0443 \u0441\u0432\u043e\u044e \u0447\u0435\u0440\u0433\u0443, \u0432\u0437\u0430\u0454\u043c\u043e\u0434\u0456\u0454 \u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0454\u043c \u0430\u043b\u0456\u0430\u0441\u0456\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u0434\u043e\u043a\u043b\u0430\u0434\u043d\u0456\u0448\u0435 \u0412\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0430\u043b\u0456\u0430\u0441\u0456\u0432 # <--- \u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u043d\u0438\u0439 \u0446\u0443\u043a\u043e\u0440 \"with\" \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0440\u043e\u0437\u0431\u0438\u0432\u0430\u0442\u0438 \u0434\u0456\u043b\u044f\u043d\u043a\u0438 \u043a\u043e\u0434\u0443 \u043d\u0430 \u043b\u043e\u0433\u0456\u0447\u043d\u0456 \u0431\u043b\u043e\u043a\u0438 ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0432 \u0434\u043e\u0440\u043e\u0433\u0443 \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \"second\" \u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0430\u043d\u043d\u044f\u043c \u0432 \u0430\u043b\u0456\u0430\u0441\u0430\u0445 units.Second uow . delete_aliases ( units . Second , [ \"second\" ]) # \u0412\u0438\u0434\u0430\u043b\u044f\u0454\u043c\u043e \u0430\u043b\u0456\u0430\u0441 \u0443 units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \u0432\u0438\u043b\u0443\u0447\u0435\u043d\u0438\u0439. \u0417\u0430\u043c\u0435\u043d\u0430 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0432 \u0434\u043e\u0440\u043e\u0433\u0443 \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \"second\" \u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0430\u043d\u043d\u044f\u043c \u0432 \u0430\u043b\u0456\u0430\u0441\u0430\u0445 units.Second uow . replace_aliases ( units . Second , { \"second\" : \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" }) # \u0417\u0430\u043c\u0456\u043d\u044e\u0454\u043c\u043e \u0430\u043b\u0456\u0430\u0441 \"second\" \u043d\u0430 \"\u0441\u0435\u043a\u0443\u043d\u0434\u0443\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # \u041e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e \u0441\u0442\u0430\u043d \u0430\u043b\u0456\u0430\u0441 \u043f\u0456\u0441\u043b\u044f \u0437\u0430\u043c\u0456\u043d\u0438 assert \"second\" not in alias_state #\u0410\u043b\u0456\u0430\u0441 \"second\" \u0432\u0438\u043b\u0443\u0447\u0435\u043d\u0438\u0439 assert \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" in alias_state # \u0417\u0430\u043c\u0456\u0441\u0442\u044c \"second\" \u0437'\u044f\u0432\u0438\u0432\u0441\u044f \u043d\u043e\u0432\u0438\u0439 \u0430\u043b\u0456\u0430\u0441 - \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" \u0414\u0430\u043b\u0456 \u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0454\u043c\u043e \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044e \u0432 TenseParser(tenses=uow.products.config) \u042f\u043a \u0434\u043e\u0434\u0430\u0442\u0438 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443? \u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443 \u0432 tense.domain.units \u0432\u0438\u0434\u0456\u043b\u0435\u043d\u043e \u043e\u043a\u0440\u0435\u043c\u0438\u0439 \u043a\u043b\u0430\u0441 - VirtualUnit. \u0412\u0456\u043d \u043d\u0456\u0447\u0438\u043c \u043d\u0435 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 ..Unit, \u0430\u043b\u0435 \u0437\u0440\u0443\u0447\u043d\u0438\u0439 \u0434\u043b\u044f \u043b\u043e\u0433\u0456\u0447\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0456\u043b\u0443 \u0432\u0456\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0432\u0456\u0434 \u0431\u0430\u0437\u043e\u0432\u0438\u0445 \u0456, \u043c\u043e\u0436\u043b\u0438\u0432\u043e, \u0443 \u043d\u0430\u0439\u0431\u043b\u0438\u0436\u0447\u043e\u043c\u0443 \u043c\u0430\u0439\u0431\u0443\u0442\u043d\u044c\u043e\u043c\u0443 \u2013 \u043d\u043e\u0432\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0456\u043e\u043d\u0430\u043b\u043e\u043c. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"\u0434\u0432\u0456\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ], duration = 2 ) ) # \u0430\u0431\u043e . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"\u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 \u0434\u0432\u0456\u0441\u0435\u043a\u0443\u043d\u0434\u0438 1 \u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ) == 5 \u0424\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u041d\u0430 \u043f\u0435\u0440\u0448\u0438\u0439 \u043f\u043e\u0433\u043b\u044f\u0434 \u043c\u043e\u0436\u0435 \u0437\u0434\u0430\u0442\u0438\u0441\u044f \u043d\u0435\u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u043c, \u044f\u043a \u0431\u0443\u0434\u044c-\u044f\u043a\u0438\u0439 \u0456\u043d\u0448\u0438\u0439 \u043a\u043e\u043d\u0444\u0456\u0433 \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457. \u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0432\u043e\u043d\u0430 (\u0440\u0435\u0434. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u044f) \u0439 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0430! \u041a\u043e\u043d\u0444\u0456\u0433 tense \u043d\u0435 \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u043d\u0438\u0439 \u0434\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0443 \u0444\u0430\u0439\u043b\u0456\u0432 \u0430\u0431\u043e \u0457\u0445 \u043d\u0430\u0437\u0432\u0438, \u0430\u043b\u0435 \u043c\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u043c\u043e \u0434\u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438\u0441\u044c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0443 \u2013 \u043d\u0430\u0437\u0432\u0438 \".tense\". \u041f\u0430\u0440\u0441\u0435\u0440 \u043a\u043e\u043d\u0444\u0456\u0433\u0444\u0430\u0439\u043b\u0456\u0432 tense \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454 \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u043f\u0430\u0442\u0435\u0440\u043d\u0456\u0432, \u0430\u043b\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u0439 \u043d\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u043a\u043e\u0436\u0435\u043d \u0437 \u043d\u0438\u0445. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456\u043c \u0432\u0438\u0441\u043b\u043e\u0432\u043b\u044e\u0432\u0430\u043d\u043d\u044f \u0437 \u043f\u0440\u0438\u0432\u043b\u0430\u0441\u043d\u0435\u043d\u043d\u044f\u043c \u0442\u0438\u043f\u0443 (variable = value). \u0412\u0438\u043a\u043b\u0438\u043a\u0430\u0454 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438, \u044f\u043a\u0449\u043e \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u0434\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0443 \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e, \u0442\u043e \u0432\u0438\u043d\u0438\u043a\u043d\u0435 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 ValueError. \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = 123). \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456 \u0431\u0443\u043b\u0435\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = True|False|true|false). Danger \u0421\u043f\u0438\u0441\u043a\u0438 \u0432 tense \u043f\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0443 \u0441\u0445\u043e\u0436\u0456 \u0437 \u043a\u043e\u0440\u0442\u0435\u0436\u0430\u043c\u0438 python. \u042f\u043a\u0449\u043e \u0443 \u0432\u0430\u0441 \u0432\u0441\u044c\u043e\u0433\u043e \u043e\u0434\u0438\u043d \u0435\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0443, \u0442\u043e \u0432\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0432\u043a\u0430\u0437\u0430\u0442\u0438 \u0439\u043e\u0433\u043e \u0437 \u043a\u043e\u043c\u043e\u044e, \u0456\u043d\u0430\u043a\u0448\u0435 \u0432\u0438\u043d\u0438\u043a\u043d\u0435 \u043f\u043e\u043c\u0438\u043b\u043a\u0430. \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456 \u0441\u043f\u0438\u0441\u043a\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = 1, 2, 3). \u0412\u0430\u0440\u0442\u043e \u0437\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u0438, \u0449\u043e \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043e\u0434\u0438\u043d \u043f\u0430\u0442\u0435\u0440\u043d \u0441\u043f\u0438\u0441\u043a\u0443 \u2013 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0443. \u041f\u0430\u0442\u0435\u0440\u043d python-list \u0437 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0438\u043c\u0438 \u0434\u0443\u0436\u043a\u0430\u043c\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432, \u044f\u043a\u0456 \u0440\u043e\u0437\u0431\u0438\u0432\u0430\u044e\u0442\u044c \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044e \u043d\u0430 \u043b\u043e\u0433\u0456\u0447\u043d\u0456 \u0433\u0440\u0443\u043f\u0438. !!! note: \u0423\u0441\u0456 \u0432\u0438\u0441\u043b\u043e\u0432\u043b\u044e\u0432\u0430\u043d\u043d\u044f \u0454 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u0438\u043c\u0438. \u0414\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0443 \u043f\u0430\u0440\u0441\u0435\u0440\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u043c\u0430\u0440\u043a\u0435\u0440 \u201cexp(do stuff here)\u201d (exp. \u0432\u0456\u0434 expression \u2013 \u0432\u0438\u0440\u0430\u0437). \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432, \u044f\u043a\u0456 \u043c\u0456\u0441\u0442\u044f\u0442\u044c \u0432\u0438\u0440\u0430\u0437 (variable = exp(6 * 6)). !!! info: \u0414\u043b\u044f \u0437\u0440\u0443\u0447\u043d\u043e\u0441\u0442\u0456 \u043e\u0431\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0431\u0443\u043b\u0438 \u0434\u043e\u0434\u0430\u043d\u0456 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0456 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0456 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438: - second: 1 - minute: 60 - hour: 60 * 60 - day: 60 * 60 * 24 - week: 60 * 60 * 24 * 7 - year: 60 * 60 * 24 * 365 \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0456\u044f: \"duration = exp(year * 10)\" # \u0420\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0440\u0438\u0432\u0430\u043b\u043e\u0441\u0442\u0456 \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f! \u0422\u0430\u043a\u043e\u0436 \u0432\u0430\u0440\u0442\u043e \u0432\u0456\u0434\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0442\u043e\u0439 \u0444\u0430\u043a\u0442, \u0449\u043e \u044f\u043a\u0449\u043e \u043d\u0430\u0432\u0456\u0442\u044c \u0432\u0438 \u0437\u043c\u0456\u043d\u0438\u0442\u0435 duration \u0443 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0437 units.Unit, \u0442\u043e \u0434\u0430\u043d\u0456 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438 \u0443 \u0432\u0438\u0440\u0430\u0437\u0430\u0445 \u0432\u0441\u0435 \u043e\u0434\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u0430\u0442\u044c\u0441\u044f \u0437 \u0432\u0438\u0445\u0456\u0434\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c, \u0442\u043e\u043c\u0443 \u0449\u043e \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u0432\u043e\u043d\u0438 \u0441\u043b\u043e\u0432\u043d\u0438\u043a\u043e\u043c \u0456 \u043d\u0435 \u0432\u0437\u0430\u0454\u043c\u043e\u043f\u043e\u0432'\u044f\u0437\u0430\u043d\u0456. \u042f\u043a\u0449\u043e \u0437\u0430\u0433\u043b\u0438\u0431\u043b\u044e\u0432\u0430\u0442\u0438\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441 \u043b\u0435\u043a\u0441\u0438\u043d\u0433\u0443, \u0442\u043e \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0430, \u0433\u0440\u0443\u0431\u043e \u043a\u0430\u0436\u0443\u0447\u0438, \u0454 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0426\u0456 \u0436 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 \u0434\u0456\u043b\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u0456 (AbstractParticleConverter) \u0442\u0430 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 (AbstractParticleValueConverter). \u0426\u0435 \u0432\u0441\u0456 \u043f\u0440\u0438\u0441\u0443\u0442\u043d\u0456 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 \u043d\u0430 \u0434\u0430\u043d\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, \u0440\u044f\u0434\u0438 \u044f\u043a\u0438\u0445, \u0448\u0432\u0438\u0434\u0448\u0435 \u0437\u0430 \u0432\u0441\u0435, \u0431\u0443\u0434\u0443\u0442\u044c \u043f\u043e\u043f\u043e\u0432\u043d\u0435\u043d\u0456 \u043d\u0430\u0439\u0431\u043b\u0438\u0436\u0447\u0438\u043c \u0447\u0430\u0441\u043e\u043c. \u0423 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0430 (\u0442\u043e\u043a\u0435\u043d\u0430/\u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0430, \u0434\u0430\u043b\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438\u043c\u0443 \"\u043f\u0430\u0440\u0442\u0438\u043a\u043b\" - dot_tense.domain.HashableParticle) \u0454 \u0441\u0432\u0456\u0439 \u043f\u0440\u0435\u0434\u0456\u043a\u0435\u0439\u0442 (\u0443\u043c\u043e\u0432\u0430), \u044f\u043a\u0438\u0439 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0423 \u0441\u0432\u043e\u044e \u0447\u0435\u0440\u0433\u0443, \u0443 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430 \u0454 \u0441\u0432\u0456\u0439 \u043f\u0440\u0435\u0434\u0456\u043a\u0435\u0439\u0442, \u044f\u043a\u0438\u0439 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u0441\u043e\u0431\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u0421\u0430\u043c \u043f\u0440\u043e\u0446\u0435\u0441 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043f\u0430\u0442\u0435\u0440\u043d\u0443 \"chain_of_responsibility\", \u0434\u0435 \u0443 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u0435\u0442\u0430\u043f\u0443 (\u043a\u0440\u043e\u043a\u0443) \u0454 \u0441\u0432\u043e\u0454 \u0437\u0430\u0432\u0434\u0430\u043d\u043d\u044f. \u0423 \u043d\u0430\u0448\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u043e \u0442\u0440\u0438 \u0435\u0442\u0430\u043f\u0438: LexingStep, AnalyzeStep, CompilingStep. \u0414\u0438\u0432. \u043d\u0430 github Note \u041f\u0435\u0440\u0448 \u043d\u0456\u0436 \u043c\u0438 \u043f\u043e\u0447\u043d\u0435\u043c\u043e \u0430\u043d\u0430\u043b\u0456\u0437 \u0435\u0442\u0430\u043f\u0456\u0432 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457, \u0432\u0430\u0440\u0442\u043e \u0443\u0442\u043e\u0447\u043d\u0438\u0442\u0438, \u0449\u043e \u0430\u043d\u0430\u043b\u0456\u0437 \u0444\u0430\u0439\u043b\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 (\u0430\u0431\u043e \u0439\u043e\u0433\u043e \u0432\u043c\u0456\u0441\u0442\u0443, \u043d\u0435 \u043c\u0430\u0454 \u0440\u0456\u0437\u043d\u0438\u0446\u0456) \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u043f\u043e \u0440\u044f\u0434\u043a\u0443 \u0437\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437. \u0422\u043e\u043c\u0443 \u0432\u0430\u0440\u0442\u043e \u0434\u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438\u0441\u044f \u0447\u0435\u0440\u0433\u043e\u0432\u043e\u0441\u0442\u0456 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0456 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u044c, \u043f\u0440\u043e \u044f\u043a\u0456 \u043c\u0438 \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c\u043e \u044f\u043a \u0442\u0456\u043b\u044c\u043a\u0438 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u0435\u0442\u0430\u043f\u0438 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443. \u041d\u0430 \u043f\u0435\u0440\u0448\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456, LexingStep, \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u043e\u0437\u0431\u0456\u0440 \u0440\u044f\u0434\u043a\u0456\u0432 \u043d\u0430 \u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0438 (\u0442\u043e\u043a\u0435\u043d\u0438). \u041d\u0430 \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456, AnalyzeStep, \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044f \u0430\u043d\u0430\u043b\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u043e\u0436\u043b\u0438\u0432\u0456 \u043f\u043e\u043c\u0438\u043b\u043a\u0438. \u041d\u0430 \u0442\u0440\u0435\u0442\u044c\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456 CompilingStep \u0434\u043e\u0434\u0430\u044e\u0442\u044c\u0441\u044f \u0432\u0456\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u0456 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443. \u0420\u043e\u0437\u0433\u043e\u0440\u043d\u0443\u0442\u0438 \u0431\u0430\u0437\u043e\u0432\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0414\u0438\u0432. \u043d\u0430 github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, } \u041a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456 \u0432 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u041d\u0430 \u0434\u0430\u043d\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043e\u0434\u0438\u043d \u0432\u0438\u0434 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456\u0432 \u2013 \"#\". \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 [model.Tense] Attention \u0426\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0454 \u043e\u0431\u043e\u0432'\u044f\u0437\u043a\u043e\u0432\u0438\u043c \u0443 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443. multiplier - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0454 \u0432 \u0434\u0435\u044f\u043a\u0438\u0445 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u0445 (\u0442\u0430\u043a\u0438\u0445 \u044f\u043a DigitParser \u0442\u0430 \u0439\u043e\u0433\u043e \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0438) \u043c\u043d\u043e\u0436\u043d\u0438\u043a\u043e\u043c \u0447\u0430\u0441\u0443. [virtual] Note \u041d\u0430 \u0432\u0456\u0434\u043c\u0456\u043d\u0443 \u0432\u0456\u0434 \u0456\u043d\u0448\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443, \u0446\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u0435\u043e\u0431\u043c\u0435\u0436\u0435\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0440\u0430\u0437\u0456\u0432 \u0434\u043b\u044f \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0440\u0456\u0437\u043d\u0438\u0445 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0445 \u044e\u043d\u0456\u0442\u0456\u0432. \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0456\u044f [model.Tense] [virtual] aliases = \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f, \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044c duration = year * 10 [virtual] aliases = \u0432\u0456\u043a, \u0432\u0456\u043a\u0456\u0432 duration = year * 100 [virtual] aliases = \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f, \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u044c duration = year * 1000 duration aliases - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443. - \u0422\u0438\u043f: `list[string]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u044e\u043d\u0456\u0442\u0443). [units.Second] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 1 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0441\u0435\u043a\u0443\u043d\u0434\u0438). [units.Minute] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0445\u0432\u0438\u043b\u0438\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0445\u0432\u0438\u043b\u0438\u043d\u0438). [units.Hour] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0433\u043e\u0434\u0438\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"h\", \"hour\", \"hours\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0433\u043e\u0434\u0438\u043d\u0438). [untits.Day] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0434\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"d\", \"day\", \"days\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u2013 \u0434\u043d\u044f). [units.Week] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24*7 - \u041e\u043f\u0438\u0441: \u0426\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0442\u0438\u0436\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"w\", \"week\", \"weeks\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0442\u0438\u0436\u043d\u044f). [units.Year] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24*365 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0440\u043e\u043a\u0443. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"y\", \"year\", \"years\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0440\u043e\u043a\u0443). \u041a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044f \u2013 \u0437 \u0442\u0435\u043e\u0440\u0456\u0454\u044e \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u043b\u0438\u0441\u044f, \u0442\u0435\u043f\u0435\u0440 \u0434\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438! \u0410\u043b\u0435, \u043f\u0435\u0440\u0448 \u043d\u0456\u0436 \u043c\u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c\u043e \u0434\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438, \u0432\u0430\u0440\u0442\u043e \u0434\u0456\u0437\u043d\u0430\u0442\u0438\u0441\u044f, \u0447\u0438\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f from_tense_file \u0432\u0456\u0434 from_tense_file_source . \u041d\u0430\u0447\u0435\u0431\u0442\u043e \u0437 \u043d\u0430\u0437\u0432\u0438 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0430 \u043d\u0456\u0431\u0438 \u043d\u0456... \u0422\u043e\u043c\u0443 \u044f \u0432\u0441\u0435 \u0437\u0430\u0440\u0430\u0437 \u043f\u043e\u044f\u0441\u043d\u044e! from_tense_file \u0432\u0456\u0434\u043a\u0440\u0438\u0432\u0430\u0454 \u0444\u0430\u0439\u043b \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0438\u043c \u0448\u043b\u044f\u0445\u043e\u043c, \u0447\u0438\u0442\u0430\u0454 \u0439\u043e\u0433\u043e \u0442\u0430 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0432\u0438\u043a\u043b\u0438\u043a from_tense_file_source , \u044f\u043a\u0438\u0439 \u0441\u0432\u043e\u0454\u044e \u0447\u0435\u0440\u0433\u043e\u044e, \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0441\u0430\u043c\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u0435 \u0443\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0430. Note \u042f\u043a\u0449\u043e \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u0442\u044c\u0441\u044f \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0437 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0439\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0443 \u0430\u0431\u043e \u0439\u043e\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0443\u044f\u0432\u043b\u0435\u043d\u043d\u044f, \u0432\u0456\u043d \u043d\u0435 \u0437\u0430\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u043f\u043e\u0432\u043d\u0456\u0441\u0442\u044e, \u0430 \u043e\u043d\u043e\u0432\u043b\u044e\u0454 \u0432\u0436\u0435 \u0456\u0441\u043d\u0443\u044e\u0447\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u044e \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u043e\u0434\u0443 dict.update(). \u042f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438\u043c\u0443 from_tense_file_source \u0434\u043b\u044f \u0435\u043c\u0443\u043b\u044f\u0446\u0456\u0457 \u043a\u043e\u043d\u0444\u0456\u0433\u0430, \u0430\u043b\u0435 \u0441\u0443\u0442\u044c \u0412\u0438 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # \u0426\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0431\u043e\u0432'\u044f\u0437\u043a\u043e\u0432\u0435, \u0430\u0434\u0436\u0435 \u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u0438 \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c # \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 60 \u0441\u0435\u043a\u0443\u043d\u0434, \u0430, \u044f\u043a \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044f \u0440\u0430\u043d\u0456\u0448\u0435, \u043a\u043e\u043d\u0444\u0456\u0433 \u043f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c\u0443 \u0441\u043f\u043e\u0441\u043e\u0431\u0456 # \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f **\u043d\u0435 \u0437\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f** \u043d\u0430 \u043d\u043e\u0432\u0438\u0439, \u0430 **\u043e\u043d\u043e\u0432\u043b\u044e\u0454\u0442\u044c\u0441\u044f** \u043d\u043e\u0432\u0438\u043c \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u043e\u0434\u0443 dict.update(). aliases = \u0441, \u0441\u0435\u043a, \u0441\u0435\u043a\u0443\u043d\u0434\u0430, \u0441\u0435\u043a\u0443\u043d\u0434, \u0441\u0435\u043a\u0443\u043d\u0434\u0438 # \u0410\u043b\u0435 \u0442\u0443\u0442 \u0443\u0436\u0435 \u0441\u0442\u0430\u0440\u0456 \u0430\u043b\u0456\u0430\u0441\u0438 \u043d\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0443\u0442\u044c\u0441\u044f. [virtual] aliases = \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f, \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u044c duration = exp(year * 1000) \"\"\" time_string = \"1 \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f \u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D \u0406 \u0442\u0443\u0442 \u041e\u0441\u0442\u0430\u043f\u0430 \u043f\u043e\u043d\u0435\u0441\u043b\u043e... \u041f\u0456\u0434 \u0447\u0430\u0441 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457 \u044f \u043f\u043e\u043c\u0456\u0442\u0438\u0432 \u043e\u0434\u043d\u0443 \u0446\u0456\u043a\u0430\u0432\u0443 \u0444\u0456\u0448\u043a\u0443. \u041f\u043e \u0441\u0443\u0442\u0456 \u043d\u0456\u0445\u0442\u043e \u043d\u0435 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u044f\u0454 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u0432\u0430\u0442\u0438 VCONVERTER_CONSTS (\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438 \u0434\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0442\u0438\u043f\u0443 year * 10 ) \u0442\u0430 \u0434\u043e\u0434\u0430\u0442\u0438 \u0442\u0443\u0434\u0438 \u043d\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = \u0432\u0456\u043a, \u0432\u0456\u043a\u0456\u0432 duration = exp(\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f * 10) \"\"\" time_string = \"1 \u0432\u0456\u043a\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500 \u0413\u043b\u043e\u0441\u0430\u0440\u0456\u0439 \u041f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u0438\u0439 \u0440\u044f\u0434\u043e\u043a \u0447\u0430\u0441\u0443 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0420\u044f\u0434\u043e\u043a \u0456\u0437 \u0441\u0443\u0432\u043e\u0440\u043e\u044e \u0447\u0435\u0440\u0433\u043e\u0432\u0456\u0441\u0442\u044e `(\u0447\u0438\u0441\u043b\u043e, \u043e\u0434\u0438\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443)` 1. 1\u0434\u0435\u043d\u044c 2 \u0445\u0432\u0438\u043b\u0438\u043d\u04385\u0441\u0435\u043a\u0443\u043d\u0434 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0438\u0439 \u0440\u044f\u0434\u043e\u043a \u0447\u0430\u0441\u0443 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0420\u044f\u0434\u043e\u043a \u0437 \u043d\u0435\u0441\u0442\u0440\u043e\u0433\u043e\u044e \u0447\u0435\u0440\u0433\u043e\u0432\u0456\u0441\u0442\u044e `(\u0441\u043b\u043e\u0432\u043e..*, \u0447\u0438\u0441\u043b\u043e, \u0441\u043b\u043e\u0432\u043e..*, \u043e\u0434\u0438\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443)` 1. \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, 1 \u0432\u0447\u043e\u0440\u0430\u0448\u043d\u0456\u0439 \u0434\u0435\u043d\u044c \u0410\u043b\u0456\u0430\u0441(\u0438) \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0421\u043b\u043e\u0432\u0430-\u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0456\u043c\u0438 \u0434\u043b\u044f \u0447\u043e\u0433\u043e\u0441\u044c (\u0423 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0456 \u043d\u0430\u0448\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0443 - \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0456\u043c\u0438 \u0434\u043b\u044f \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] \u0420\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0424\u0443\u043d\u043a\u0446\u0456\u044f, \u044f\u043a\u0430 \u0430\u0434\u0430\u043f\u0442\u0443\u0454 (\u043f\u0456\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u044f\u0454) \u0440\u044f\u0434\u043e\u043a \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0435\u0440\u0430.","title":"Ukraine"},{"location":"uk_faq/#tense","text":"tense - \u0456\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u0447\u0430\u0441\u0443. \u0427\u0438 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0412\u0430\u043c \u0431\u0443\u043b\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0440\u044f\u0434\u043e\u043a \u0442\u0438\u043f\u0443 \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" \u0432 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0431\u043e \u043e\u0431'\u0454\u043a\u0442 datetime.timedelta? \u041d\u0456? \u0422\u043e\u0434\u0456 \u043f\u043e\u0440\u0430\u0434\u044c\u0442\u0435 \u043d\u0430\u0441 \u0441\u0432\u043e\u0457\u043c \u0434\u0440\u0443\u0437\u044f\u043c:) \u0410 \u044f\u043a\u0449\u043e \u0432\u0438 \u0432\u0441\u0435 \u0449\u0435 \u0442\u0443\u0442 \u2013 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0438\u043c\u043e!","title":"\u0429\u043e \u044f\u0432\u043b\u044f\u0454 \u0441\u043e\u0431\u043e\u044e tense?"},{"location":"uk_faq/#tense_1","text":"tense \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432\u0430\u043d\u0438\u0439 \u0442\u0430\u043a, \u0449\u043e\u0431 \u0437\u0430\u0431\u0435\u0437\u043f\u0435\u0447\u0438\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443 \u0433\u043d\u0443\u0447\u043a\u0456\u0441\u0442\u044c , \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u0456\u0441\u0442\u044c \u0442\u0430 \u0437\u0440\u0443\u0447\u043d\u0456\u0441\u0442\u044c \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0435\u0432\u0456. \u0414\u0435\u044f\u043a\u0430 \u043b\u043e\u0433\u0456\u043a\u0430 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u0454\u0442\u044c\u0441\u044f \u043e\u0434\u0440\u0430\u0437\u0443, \u044f\u043a \u043a\u043b\u0430\u0441 \u0430\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0456\u044f: from tense import TenseParser , from_tense_file , from_tense_file_source \u0410 \u0434\u0435\u044f\u043a\u0456 \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u044e\u0442\u044c\u0441\u044f \u044f\u043a \u043c\u043e\u0434\u0443\u043b\u0456: from tense import units , model , unit_of_work , resolvers , ... from tense.adapters import repository \u0422\u0430\u043a\u0438\u0439 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0437\u0440\u043e\u0431\u043b\u0435\u043d\u043e, \u0449\u043e\u0431 \u0443\u043d\u0438\u043a\u043d\u0443\u0442\u0438 \u0431\u0443\u0434\u044c-\u044f\u043a\u0438\u0445 \u0446\u0438\u043a\u043b\u0456\u0447\u043d\u0438\u0445 \u0456\u043c\u043f\u043e\u0440\u0442\u0456\u0432 \u0456 \u0454 \u043e\u0441\u043d\u043e\u0432\u043d\u0438\u043c \u0441\u0442\u0438\u043b\u0435\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0443.","title":"\u042f\u043a \u0441\u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432\u0430\u043d\u0438\u0439 tense?"},{"location":"uk_faq/#_1","text":"\u041f\u043e\u0447\u043d\u0435\u043c\u043e \u0437 \u043e\u0441\u043d\u043e\u0432, \u043f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u043e, \u0443 \u043d\u0430\u0441 \u0454 \u0440\u044f\u0434\u043e\u043a \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\", \u044f\u043a \u043d\u0430\u043c \u0457\u0457 \u043f\u0435\u0440\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u043d\u0430, \u044f\u043a \u0440\u0430\u043d\u0456\u0448\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044f, \u0443 \u0441\u0435\u043a\u0443\u043d\u0434 \u0430\u0431\u043e \u043e\u0431'\u0454\u043a\u0442 datetime.timedelta? - \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e! from tense import TenseParser time_string = \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT ) >>> parser . parse ( time_string ) 0 \u0417\u0430\u0447\u0435\u043a\u0430\u0439\u0442\u0435, 0? \u0406 \u0446\u0435 \u0432\u0441\u0435? - \u041d\u0456. \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u044e\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u0434\u0435\u044f\u043a\u0456 \u0430\u043b\u0456\u0430\u0441\u0438 \u0430\u043d\u0433\u043b\u0456\u0439\u0441\u044c\u043a\u043e\u0457 \u043c\u043e\u0432\u0438, \u0440\u0435\u0448\u0442\u0443 \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0434\u0430\u0442\u0438 \u0441\u0430\u043c\u0456! \u0414\u0438\u0432. \u043f\u0440\u0438\u043a\u043b\u0430\u0434 \u043d\u0438\u0436\u0447\u0435: from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u0445\u0432\u0438\u043b\u0438\u043d\u0430\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1\u0434\u0435\u043d\u044c1\u0445\u0432\u0438\u043b\u0438\u043d\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , config = tenses . config ) >>> parser . parse ( time_string ) 86480 \u041e\u0441\u044c \u0456\u043d\u0448\u0430 \u0441\u043f\u0440\u0430\u0432\u0430!","title":"\u0417 \u0447\u043e\u0433\u043e \u043f\u043e\u0447\u0430\u0442\u0438?"},{"location":"uk_faq/#tenseparser","text":"TenseParser . __new__ ( parser_cls : Type [ abc_parsers . AbstractParser ] = DIGIT , * , tenses : Optional [ Union [ abc_repository . AbstractTenseRepository , dict [ str , Any ]] ] = None , converter : Optional [ abc_converters . AbstractConverter ] = None , time_resolver : Optional [ Callable [[ str , model . Tense ], Iterator [ str ]]] = None , iteration_speedup : bool = False , ) -> abc_parsers . AbstractParser : \u0414\u0438\u0432. \u043d\u0430 github \u041f\u0435\u0440\u0448\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c TenseParser \u043f\u0440\u0438\u0439\u043c\u0430\u0454 \u043f\u0456\u0434\u043a\u043b\u0430\u0441 \u0432\u0456\u0434 tense.application.ports.parsers.AbstractParser . \u0421\u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0432\u0436\u0435 \u0454 \u0434\u0435\u044f\u043a\u0456 \u0433\u043e\u0442\u043e\u0432\u0456 \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u0457, \u0442\u0430\u043a\u0456 \u044f\u043a TenseParser.DIGIT - tense.adapters.parsers.DigitParser \u0442\u0430 TIMEDELTA - tense.adapters.parsers.TimedeltaParser. Note \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u044e\u0432\u0430\u0442\u0438 \u0456 \u0441\u0432\u043e\u0457 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0456 \u043f\u0430\u0440\u0441\u0435\u0440\u0438, \u043f\u0435\u0440\u0448 \u0437\u0430 \u0432\u0441\u0435 \u0443\u0441\u043f\u0430\u0434\u043a\u0443\u0432\u0430\u0432\u0448\u0438 tense.application.ports.parsers.AbstractParser \u0423 TenseParser.__new__ \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u043d\u0435\u0432\u0435\u043b\u0438\u043a\u0430 \"\u043e\u0431\u0440\u043e\u0431\u043a\u0430\" \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u044f\u043a\u0456 \u043d\u0430\u0434\u0430\u043b\u0456 \u0431\u0443\u0434\u0443\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0456 \u0432 \u0456\u043d\u0456\u0446\u0456\u0430\u043b\u0456\u0437\u0430\u0442\u043e\u0440\u0438 \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0456\u0432 ...AbstractParser , \u0437\u0440\u0435\u0448\u0442\u043e\u044e \u043c\u0438 \u043e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e \u0433\u043e\u0442\u043e\u0432\u0438\u0439 \u043f\u0456\u0434\u043a\u043b\u0430\u0441 ...AbstractParser .","title":"\u042f\u043a \u043f\u0440\u0430\u0446\u044e\u0454 TenseParser?"},{"location":"uk_faq/#_2","text":"\u042f\u043a\u0449\u043e \u0432\u0430\u0448 \u0440\u044f\u0434\u043e\u043a \u0454 \u0447\u0438\u043c\u043e\u0441\u044c \u043f\u043e\u0434\u0456\u0431\u043d\u0438\u043c \u0434\u043e \"1 \u0434\u0435\u043d\u044c + 2 \u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0456 5 \u0441\u0435\u043a\u0443\u043d\u0434\", \u0442\u043e, \u0448\u0432\u0438\u0434\u0448\u0435 \u0437\u0430 \u0432\u0441\u0435, \u0443 \u0432\u0430\u0441 \u0431\u0443\u0434\u0435 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u0442\u0438 \u0442\u0456\u043b\u044c\u043a\u0438 \u043e\u0441\u0442\u0430\u043d\u043d\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u0417\u0430\u043f\u0438\u0442\u0430\u0454\u0442\u0435, \u0447\u043e\u043c\u0443 \u0446\u0435 \u0442\u0430\u043a? - \u0421\u043f\u0440\u0430\u0432\u0430 \u0432 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0456 (time_resolver). \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0441\u0442\u043e\u0457\u0442\u044c \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u044f\u043a\u0438\u0439 \u0432\u0456\u0434\u043c\u0456\u043d\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0454\u0442\u044c\u0441\u044f \u0437 \u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u0438\u043c\u0438 \u0440\u044f\u0434\u043a\u0430\u043c\u0438, \u0446\u0435\u0439 \u0436\u0435 \u0440\u044f\u0434\u043e\u043a \u0454 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0438\u043c (\u0434\u0438\u0432. \u043d\u0430\u043f\u0440\u0438\u043a\u0456\u043d\u0446\u0456 FAQ \u0413\u043b\u043e\u0441\u0430\u0440\u0456\u0439). \u041a\u0440\u0456\u043c \"\u043f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u043e\u0433\u043e\" \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430, \u0449\u043e \u0441\u0442\u043e\u0457\u0442\u044c \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c, \u0442\u0430\u043a \u0441\u0430\u043c\u043e \u0454 \u0456 \"\u0440\u043e\u0437\u0443\u043c\u043d\u0438\u0439\". Info tense.application.resolvers.smart_resolver() \u0442\u0430\u043a\u043e\u0436 \u043d\u0435 \u0447\u0443\u0442\u043b\u0438\u0432\u0438\u0439 \u0434\u043e \u0440\u0435\u0433\u0456\u0441\u0442\u0440\u0443. \u0414\u0438\u0432. \u043d\u0430 github Note \u0422\u0430\u043a \u0441\u0430\u043c\u043e \u044f\u043a \u0456 \u0437 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u043c\u0438, \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0441\u0432\u0456\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0439 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440, \u0442\u0456\u043b\u044c\u043a\u0438 \u043d\u0435 \u0437\u0430\u0431\u0443\u0432\u0430\u0439\u0442\u0435, \u0449\u043e \u0443 \u0440\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440\u0430 \u0454 \u0431\u0430\u0437\u043e\u0432\u0430 \u0441\u0438\u0433\u043d\u0430\u0442\u0443\u0440\u0430 (arg1: str, arg2: model.Tense). from tense import TenseParser , units , resolvers from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_aliases_to ( units . Day , [ \"\u0434\u0435\u043d\u044c\" ]) . add_aliases_to ( units . Minute , [ \"\u0445\u0432\u0438\u043b\u0438\u043d\u0438\" ]) . add_aliases_to ( units . Second , [ \"\u0441\u0435\u043a\u0443\u043d\u0434\" ]) ) time_string = \"1 \u0434\u0435\u043d\u044c + 2 \u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0438 5 \u0441\u0435\u043a\u0443\u043d\u0434\" parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config , time_resolver = resolvers . smart_resolver , ) >>> parser . parse ( time_string ) 86525","title":"\u0427\u043e\u043c\u0443 \u043c\u0456\u0439 \u0440\u044f\u0434\u043e\u043a \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u044c\u0441\u044f?"},{"location":"uk_faq/#converter-tenseparser","text":"\u0423 \u043a\u043b\u0430\u0441\u0443 AbstractParser \u0454 \u043c\u0435\u0442\u043e\u0434 parse, \u044f\u043a\u0438\u0439 \u043d\u0435 \u043c\u043e\u0436\u043d\u0430 \u043f\u0435\u0440\u0435\u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438. \u0423 \u0446\u044c\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0456 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0443 ._parse() \u0437 \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0456\u0432, \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u044f\u043a\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e \u0434\u043e \u0437\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430, \u044f\u043a\u0449\u043e \u0442\u043e\u0439 \u043d\u0435 \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 None. Note \u041c\u0438 \u043d\u0430\u043c\u0430\u0433\u0430\u0454\u043c\u043e\u0441\u044f \u0437\u0440\u043e\u0431\u0438\u0442\u0438 tense \u044f\u043a\u043e\u043c\u043e\u0433\u0430 \u0433\u043d\u0443\u0447\u043a\u0456\u0448\u0438\u043c, \u0442\u043e\u043c\u0443 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u043d\u043e \u043a\u043e\u0436\u0435\u043d \u0445\u0443\u043a \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0435\u0430\u043b\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u043f\u043e-\u0441\u0432\u043e\u0454\u043c\u0443 \u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u0438 \u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u043c\u0456\u0441\u0446\u0435. \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u043d\u0435 \u0454 \u0432\u0438\u043d\u044f\u0442\u043a\u043e\u043c, \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0441\u0432\u0456\u0439 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0439, \u043f\u0435\u0440\u0448 \u0443\u0441\u043f\u0430\u0434\u043a\u0443\u0432\u0430\u0432\u0448\u0438 \u0439\u043e\u0433\u043e \u0432\u0456\u0434 tense.application.ports.converters.AbstractConverter. \u0422\u0430\u043a\u043e\u0436 \u0432\u0430\u0440\u0442\u043e \u0432\u0440\u0430\u0445\u0443\u0432\u0430\u0442\u0438 \u0442\u043e\u0439 \u0444\u0430\u043a\u0442, \u0449\u043e ...AbstractConverter \u0454 \u0434\u0436\u0435\u043d\u0435\u0440\u0438\u043a\u043e\u043c, \u044f\u043a\u0438\u0439 \u043d\u0430\u0431\u0443\u0432\u0430\u0454 \u0442\u0438\u043f\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0435 \u0431\u0443\u0434\u0435 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0435 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0456 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0456\u0457 (\u0439\u043e\u0433\u043e \u0436 \u0456 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0432 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0456 .convert()).","title":"\u0410 \u0449\u043e \u0437\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \"converter\" \u0443 TenseParser?"},{"location":"uk_faq/#deletereplace","text":"\u0410\u0442\u043e\u043c\u0430\u0440\u043d\u0456 \u043e\u043f\u0435\u0440\u0430\u0446\u0456\u0457 \u0432 tense \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u043f\u0430\u0442\u0435\u0440\u043d\u043e\u043c UnitOfWork , \u044f\u043a\u0438\u0439, \u0443 \u0441\u0432\u043e\u044e \u0447\u0435\u0440\u0433\u0443, \u0432\u0437\u0430\u0454\u043c\u043e\u0434\u0456\u0454 \u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u0454\u043c \u0430\u043b\u0456\u0430\u0441\u0456\u0432. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u0434\u043e\u043a\u043b\u0430\u0434\u043d\u0456\u0448\u0435 \u0412\u0438\u0434\u0430\u043b\u0435\u043d\u043d\u044f \u0430\u043b\u0456\u0430\u0441\u0456\u0432 # <--- \u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u043d\u0438\u0439 \u0446\u0443\u043a\u043e\u0440 \"with\" \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0440\u043e\u0437\u0431\u0438\u0432\u0430\u0442\u0438 \u0434\u0456\u043b\u044f\u043d\u043a\u0438 \u043a\u043e\u0434\u0443 \u043d\u0430 \u043b\u043e\u0433\u0456\u0447\u043d\u0456 \u0431\u043b\u043e\u043a\u0438 ---> # from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0432 \u0434\u043e\u0440\u043e\u0433\u0443 \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \"second\" \u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0430\u043d\u043d\u044f\u043c \u0432 \u0430\u043b\u0456\u0430\u0441\u0430\u0445 units.Second uow . delete_aliases ( units . Second , [ \"second\" ]) # \u0412\u0438\u0434\u0430\u043b\u044f\u0454\u043c\u043e \u0430\u043b\u0456\u0430\u0441 \u0443 units.Second assert \"second\" not in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \u0432\u0438\u043b\u0443\u0447\u0435\u043d\u0438\u0439. \u0417\u0430\u043c\u0435\u043d\u0430 \u0430\u043b\u0438\u0430\u0441\u043e\u0432 from tense import unit_of_work , units with unit_of_work . TenseUnitOfWork () as uow : second_str = uow . with_unit_resolve ( units . Second ) # \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0432\u0430\u043b\u0438 \u0442\u0438\u043f \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0432 \u0434\u043e\u0440\u043e\u0433\u0443 \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443 assert \"second\" in uow . products . get_setting ( second_str , \"aliases\" ) # \u0410\u043b\u0456\u0430\u0441 \"second\" \u0437\u0430 \u043f\u0440\u043e\u043c\u043e\u0432\u0447\u0430\u043d\u043d\u044f\u043c \u0432 \u0430\u043b\u0456\u0430\u0441\u0430\u0445 units.Second uow . replace_aliases ( units . Second , { \"second\" : \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" }) # \u0417\u0430\u043c\u0456\u043d\u044e\u0454\u043c\u043e \u0430\u043b\u0456\u0430\u0441 \"second\" \u043d\u0430 \"\u0441\u0435\u043a\u0443\u043d\u0434\u0443\" alias_state = uow . products . get_setting ( second_str , \"aliases\" ) # \u041e\u0442\u0440\u0438\u043c\u0443\u0454\u043c\u043e \u0441\u0442\u0430\u043d \u0430\u043b\u0456\u0430\u0441 \u043f\u0456\u0441\u043b\u044f \u0437\u0430\u043c\u0456\u043d\u0438 assert \"second\" not in alias_state #\u0410\u043b\u0456\u0430\u0441 \"second\" \u0432\u0438\u043b\u0443\u0447\u0435\u043d\u0438\u0439 assert \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" in alias_state # \u0417\u0430\u043c\u0456\u0441\u0442\u044c \"second\" \u0437'\u044f\u0432\u0438\u0432\u0441\u044f \u043d\u043e\u0432\u0438\u0439 \u0430\u043b\u0456\u0430\u0441 - \"\u0441\u0435\u043a\u0443\u043d\u0434\u0430\" \u0414\u0430\u043b\u0456 \u043c\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0454\u043c\u043e \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044e \u0432 TenseParser(tenses=uow.products.config)","title":"\u0410 \u0449\u043e \u0449\u043e\u0434\u043e delete/replace \u0430\u043b\u0456\u0430\u0441\u0456\u0432?"},{"location":"uk_faq/#_3","text":"\u0414\u043b\u044f \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443 \u0432 tense.domain.units \u0432\u0438\u0434\u0456\u043b\u0435\u043d\u043e \u043e\u043a\u0440\u0435\u043c\u0438\u0439 \u043a\u043b\u0430\u0441 - VirtualUnit. \u0412\u0456\u043d \u043d\u0456\u0447\u0438\u043c \u043d\u0435 \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 ..Unit, \u0430\u043b\u0435 \u0437\u0440\u0443\u0447\u043d\u0438\u0439 \u0434\u043b\u044f \u043b\u043e\u0433\u0456\u0447\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0456\u043b\u0443 \u0432\u0456\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0432\u0456\u0434 \u0431\u0430\u0437\u043e\u0432\u0438\u0445 \u0456, \u043c\u043e\u0436\u043b\u0438\u0432\u043e, \u0443 \u043d\u0430\u0439\u0431\u043b\u0438\u0436\u0447\u043e\u043c\u0443 \u043c\u0430\u0439\u0431\u0443\u0442\u043d\u044c\u043e\u043c\u0443 \u2013 \u043d\u043e\u0432\u0438\u043c \u0444\u0443\u043d\u043a\u0446\u0456\u043e\u043d\u0430\u043b\u043e\u043c. from tense import TenseParser , units from tense.adapters import repository tenses = repository . TenseRepository () ( tenses . add_virtual_unit ( units . VirtualUnit ( aliases = [ \"\u0434\u0432\u0456\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ], duration = 2 ) ) # \u0430\u0431\u043e . add_virtual_unit_dict ( # TypedDict { \"aliases\" : [ \"\u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ], \"duration\" : 3 } ) ) parser = TenseParser ( TenseParser . DIGIT , tenses = tenses . config ) assert parser . parse ( \"1 \u0434\u0432\u0456\u0441\u0435\u043a\u0443\u043d\u0434\u0438 1 \u0442\u0440\u0438\u0441\u0435\u043a\u0443\u043d\u0434\u0438\" ) == 5","title":"\u042f\u043a \u0434\u043e\u0434\u0430\u0442\u0438 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443?"},{"location":"uk_faq/#_4","text":"\u041d\u0430 \u043f\u0435\u0440\u0448\u0438\u0439 \u043f\u043e\u0433\u043b\u044f\u0434 \u043c\u043e\u0436\u0435 \u0437\u0434\u0430\u0442\u0438\u0441\u044f \u043d\u0435\u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438\u043c, \u044f\u043a \u0431\u0443\u0434\u044c-\u044f\u043a\u0438\u0439 \u0456\u043d\u0448\u0438\u0439 \u043a\u043e\u043d\u0444\u0456\u0433 \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457. \u0410\u043b\u0435 \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u0432\u043e\u043d\u0430 (\u0440\u0435\u0434. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u044f) \u0439 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0430! \u041a\u043e\u043d\u0444\u0456\u0433 tense \u043d\u0435 \u043f\u0440\u0438\u0432'\u044f\u0437\u0430\u043d\u0438\u0439 \u0434\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0443 \u0444\u0430\u0439\u043b\u0456\u0432 \u0430\u0431\u043e \u0457\u0445 \u043d\u0430\u0437\u0432\u0438, \u0430\u043b\u0435 \u043c\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0454\u043c\u043e \u0434\u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438\u0441\u044c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0443 \u2013 \u043d\u0430\u0437\u0432\u0438 \".tense\". \u041f\u0430\u0440\u0441\u0435\u0440 \u043a\u043e\u043d\u0444\u0456\u0433\u0444\u0430\u0439\u043b\u0456\u0432 tense \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454 \u0431\u0443\u043a\u0432\u0430\u043b\u044c\u043d\u043e \u043a\u0456\u043b\u044c\u043a\u0430 \u043f\u0430\u0442\u0435\u0440\u043d\u0456\u0432, \u0430\u043b\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u0439 \u043d\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u043a\u043e\u0436\u0435\u043d \u0437 \u043d\u0438\u0445. GetattributeParticleConverter DigitValueConverter BooleanValueConverter ListValueConverter ExpressionValueConverter \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456\u043c \u0432\u0438\u0441\u043b\u043e\u0432\u043b\u044e\u0432\u0430\u043d\u043d\u044f \u0437 \u043f\u0440\u0438\u0432\u043b\u0430\u0441\u043d\u0435\u043d\u043d\u044f\u043c \u0442\u0438\u043f\u0443 (variable = value). \u0412\u0438\u043a\u043b\u0438\u043a\u0430\u0454 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438, \u044f\u043a\u0449\u043e \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440 \u0434\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0443 \u043d\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u043e, \u0442\u043e \u0432\u0438\u043d\u0438\u043a\u043d\u0435 \u043f\u043e\u043c\u0438\u043b\u043a\u0430 ValueError. \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = 123). \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456 \u0431\u0443\u043b\u0435\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = True|False|true|false). Danger \u0421\u043f\u0438\u0441\u043a\u0438 \u0432 tense \u043f\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0443 \u0441\u0445\u043e\u0436\u0456 \u0437 \u043a\u043e\u0440\u0442\u0435\u0436\u0430\u043c\u0438 python. \u042f\u043a\u0449\u043e \u0443 \u0432\u0430\u0441 \u0432\u0441\u044c\u043e\u0433\u043e \u043e\u0434\u0438\u043d \u0435\u043b\u0435\u043c\u0435\u043d\u0442 \u0441\u043f\u0438\u0441\u043a\u0443, \u0442\u043e \u0432\u0438 \u043f\u043e\u0432\u0438\u043d\u043d\u0456 \u0432\u043a\u0430\u0437\u0430\u0442\u0438 \u0439\u043e\u0433\u043e \u0437 \u043a\u043e\u043c\u043e\u044e, \u0456\u043d\u0430\u043a\u0448\u0435 \u0432\u0438\u043d\u0438\u043a\u043d\u0435 \u043f\u043e\u043c\u0438\u043b\u043a\u0430. \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456 \u0441\u043f\u0438\u0441\u043a\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432 (variable = 1, 2, 3). \u0412\u0430\u0440\u0442\u043e \u0437\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u0438, \u0449\u043e \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043e\u0434\u0438\u043d \u043f\u0430\u0442\u0435\u0440\u043d \u0441\u043f\u0438\u0441\u043a\u0443 \u2013 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0443. \u041f\u0430\u0442\u0435\u0440\u043d python-list \u0437 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u0438\u043c\u0438 \u0434\u0443\u0436\u043a\u0430\u043c\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432, \u044f\u043a\u0456 \u0440\u043e\u0437\u0431\u0438\u0432\u0430\u044e\u0442\u044c \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044e \u043d\u0430 \u043b\u043e\u0433\u0456\u0447\u043d\u0456 \u0433\u0440\u0443\u043f\u0438. !!! note: \u0423\u0441\u0456 \u0432\u0438\u0441\u043b\u043e\u0432\u043b\u044e\u0432\u0430\u043d\u043d\u044f \u0454 \u0431\u0435\u0437\u043f\u0435\u0447\u043d\u0438\u043c\u0438. \u0414\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0443 \u043f\u0430\u0440\u0441\u0435\u0440\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u043c\u0430\u0440\u043a\u0435\u0440 \u201cexp(do stuff here)\u201d (exp. \u0432\u0456\u0434 expression \u2013 \u0432\u0438\u0440\u0430\u0437). \u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0441\u0456\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043e\u0431'\u0454\u043a\u0442\u0456\u0432, \u044f\u043a\u0456 \u043c\u0456\u0441\u0442\u044f\u0442\u044c \u0432\u0438\u0440\u0430\u0437 (variable = exp(6 * 6)). !!! info: \u0414\u043b\u044f \u0437\u0440\u0443\u0447\u043d\u043e\u0441\u0442\u0456 \u043e\u0431\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0431\u0443\u043b\u0438 \u0434\u043e\u0434\u0430\u043d\u0456 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0456 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0456 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438: - second: 1 - minute: 60 - hour: 60 * 60 - day: 60 * 60 * 24 - week: 60 * 60 * 24 * 7 - year: 60 * 60 * 24 * 365 \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0456\u044f: \"duration = exp(year * 10)\" # \u0420\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0440\u0438\u0432\u0430\u043b\u043e\u0441\u0442\u0456 \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f! \u0422\u0430\u043a\u043e\u0436 \u0432\u0430\u0440\u0442\u043e \u0432\u0456\u0434\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0442\u043e\u0439 \u0444\u0430\u043a\u0442, \u0449\u043e \u044f\u043a\u0449\u043e \u043d\u0430\u0432\u0456\u0442\u044c \u0432\u0438 \u0437\u043c\u0456\u043d\u0438\u0442\u0435 duration \u0443 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0437 units.Unit, \u0442\u043e \u0434\u0430\u043d\u0456 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438 \u0443 \u0432\u0438\u0440\u0430\u0437\u0430\u0445 \u0432\u0441\u0435 \u043e\u0434\u043d\u043e \u0437\u0430\u043b\u0438\u0448\u0430\u0442\u044c\u0441\u044f \u0437 \u0432\u0438\u0445\u0456\u0434\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c, \u0442\u043e\u043c\u0443 \u0449\u043e \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0456 \u0432\u043e\u043d\u0438 \u0441\u043b\u043e\u0432\u043d\u0438\u043a\u043e\u043c \u0456 \u043d\u0435 \u0432\u0437\u0430\u0454\u043c\u043e\u043f\u043e\u0432'\u044f\u0437\u0430\u043d\u0456. \u042f\u043a\u0449\u043e \u0437\u0430\u0433\u043b\u0438\u0431\u043b\u044e\u0432\u0430\u0442\u0438\u0441\u044f \u0432 \u043f\u0440\u043e\u0446\u0435\u0441 \u043b\u0435\u043a\u0441\u0438\u043d\u0433\u0443, \u0442\u043e \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0430, \u0433\u0440\u0443\u0431\u043e \u043a\u0430\u0436\u0443\u0447\u0438, \u0454 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0426\u0456 \u0436 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 \u0434\u0456\u043b\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u0456 (AbstractParticleConverter) \u0442\u0430 \u0441\u0430\u0431\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 (AbstractParticleValueConverter). \u0426\u0435 \u0432\u0441\u0456 \u043f\u0440\u0438\u0441\u0443\u0442\u043d\u0456 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0438 \u043d\u0430 \u0434\u0430\u043d\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, \u0440\u044f\u0434\u0438 \u044f\u043a\u0438\u0445, \u0448\u0432\u0438\u0434\u0448\u0435 \u0437\u0430 \u0432\u0441\u0435, \u0431\u0443\u0434\u0443\u0442\u044c \u043f\u043e\u043f\u043e\u0432\u043d\u0435\u043d\u0456 \u043d\u0430\u0439\u0431\u043b\u0438\u0436\u0447\u0438\u043c \u0447\u0430\u0441\u043e\u043c. \u0423 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043f\u0430\u0442\u0435\u0440\u043d\u0430 (\u0442\u043e\u043a\u0435\u043d\u0430/\u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0430, \u0434\u0430\u043b\u0456 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438\u043c\u0443 \"\u043f\u0430\u0440\u0442\u0438\u043a\u043b\" - dot_tense.domain.HashableParticle) \u0454 \u0441\u0432\u0456\u0439 \u043f\u0440\u0435\u0434\u0456\u043a\u0435\u0439\u0442 (\u0443\u043c\u043e\u0432\u0430), \u044f\u043a\u0438\u0439 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454 \u0432\u043b\u0430\u0441\u043d\u0438\u0439 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440. \u0423 \u0441\u0432\u043e\u044e \u0447\u0435\u0440\u0433\u0443, \u0443 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0435\u0440\u0430 \u0454 \u0441\u0432\u0456\u0439 \u043f\u0440\u0435\u0434\u0456\u043a\u0435\u0439\u0442, \u044f\u043a\u0438\u0439 \u0432\u0438\u0437\u043d\u0430\u0447\u0430\u0454 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u0441\u043e\u0431\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f. \u0421\u0430\u043c \u043f\u0440\u043e\u0446\u0435\u0441 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u0438\u0439 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043f\u0430\u0442\u0435\u0440\u043d\u0443 \"chain_of_responsibility\", \u0434\u0435 \u0443 \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u0435\u0442\u0430\u043f\u0443 (\u043a\u0440\u043e\u043a\u0443) \u0454 \u0441\u0432\u043e\u0454 \u0437\u0430\u0432\u0434\u0430\u043d\u043d\u044f. \u0423 \u043d\u0430\u0448\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u0440\u0435\u0430\u043b\u0456\u0437\u043e\u0432\u0430\u043d\u043e \u0442\u0440\u0438 \u0435\u0442\u0430\u043f\u0438: LexingStep, AnalyzeStep, CompilingStep. \u0414\u0438\u0432. \u043d\u0430 github Note \u041f\u0435\u0440\u0448 \u043d\u0456\u0436 \u043c\u0438 \u043f\u043e\u0447\u043d\u0435\u043c\u043e \u0430\u043d\u0430\u043b\u0456\u0437 \u0435\u0442\u0430\u043f\u0456\u0432 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457, \u0432\u0430\u0440\u0442\u043e \u0443\u0442\u043e\u0447\u043d\u0438\u0442\u0438, \u0449\u043e \u0430\u043d\u0430\u043b\u0456\u0437 \u0444\u0430\u0439\u043b\u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 (\u0430\u0431\u043e \u0439\u043e\u0433\u043e \u0432\u043c\u0456\u0441\u0442\u0443, \u043d\u0435 \u043c\u0430\u0454 \u0440\u0456\u0437\u043d\u0438\u0446\u0456) \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u043f\u043e \u0440\u044f\u0434\u043a\u0443 \u0437\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437. \u0422\u043e\u043c\u0443 \u0432\u0430\u0440\u0442\u043e \u0434\u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438\u0441\u044f \u0447\u0435\u0440\u0433\u043e\u0432\u043e\u0441\u0442\u0456 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0456\u0432 \u0456 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u044c, \u043f\u0440\u043e \u044f\u043a\u0456 \u043c\u0438 \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c\u043e \u044f\u043a \u0442\u0456\u043b\u044c\u043a\u0438 \u0440\u043e\u0437\u0433\u043b\u044f\u043d\u0435\u043c\u043e \u0435\u0442\u0430\u043f\u0438 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443. \u041d\u0430 \u043f\u0435\u0440\u0448\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456, LexingStep, \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u043e\u0437\u0431\u0456\u0440 \u0440\u044f\u0434\u043a\u0456\u0432 \u043d\u0430 \u043f\u0430\u0440\u0442\u0438\u043a\u043b\u0438 (\u0442\u043e\u043a\u0435\u043d\u0438). \u041d\u0430 \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456, AnalyzeStep, \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044f \u0430\u043d\u0430\u043b\u0456\u0437\u0443\u0454\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u043e\u0436\u043b\u0438\u0432\u0456 \u043f\u043e\u043c\u0438\u043b\u043a\u0438. \u041d\u0430 \u0442\u0440\u0435\u0442\u044c\u043e\u043c\u0443 \u0435\u0442\u0430\u043f\u0456 CompilingStep \u0434\u043e\u0434\u0430\u044e\u0442\u044c\u0441\u044f \u0432\u0456\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u0456 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443. \u0420\u043e\u0437\u0433\u043e\u0440\u043d\u0443\u0442\u0438 \u0431\u0430\u0437\u043e\u0432\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0414\u0438\u0432. \u043d\u0430 github class Te nse Reposi t ory(Abs tra c t Te nse Reposi t ory) : # <i n heri te d docs tr i n g fr om : class : `Te nse Reposi t ory`> # _ tense _co nf ig : dic t [ s tr , A n y ] = { \"model.Tense\" : { \"multiplier\" : 1 , \"virtual\" : [], }, \"units.Second\" : { \"duration\" : 1 , \"aliases\" : [ \"s\" , \"sec\" , \"secs\" , \"second\" , \"seconds\" , ], }, \"units.Minute\" : { \"duration\" : 60 , \"aliases\" : [ \"m\" , \"min\" , \"mins\" , \"minute\" , \"minutes\" , ], }, \"units.Hour\" : { \"duration\" : 60 * 60 , \"aliases\" : [ \"h\" , \"hour\" , \"hours\" , ], }, \"units.Day\" : { \"duration\" : 60 * 60 * 24 , \"aliases\" : [ \"d\" , \"day\" , \"days\" , ], }, \"units.Week\" : { \"duration\" : 60 * 60 * 24 * 7 , \"aliases\" : [ \"w\" , \"week\" , \"weeks\" , ], }, \"units.Year\" : { \"duration\" : 60 * 60 * 24 * 365 , \"aliases\" : [ \"y\" , \"year\" , \"years\" , ], }, }","title":"\u0424\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457"},{"location":"uk_faq/#_5","text":"\u041d\u0430 \u0434\u0430\u043d\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454\u0442\u044c\u0441\u044f \u043b\u0438\u0448\u0435 \u043e\u0434\u0438\u043d \u0432\u0438\u0434 \u043a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456\u0432 \u2013 \"#\".","title":"\u041a\u043e\u043c\u0435\u043d\u0442\u0430\u0440\u0456 \u0432 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457"},{"location":"uk_faq/#_6","text":"[model.Tense] Attention \u0426\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0454 \u043e\u0431\u043e\u0432'\u044f\u0437\u043a\u043e\u0432\u0438\u043c \u0443 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443. multiplier - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0454 \u0432 \u0434\u0435\u044f\u043a\u0438\u0445 \u043f\u0430\u0440\u0441\u0435\u0440\u0430\u0445 (\u0442\u0430\u043a\u0438\u0445 \u044f\u043a DigitParser \u0442\u0430 \u0439\u043e\u0433\u043e \u043f\u0456\u0434\u043a\u043b\u0430\u0441\u0438) \u043c\u043d\u043e\u0436\u043d\u0438\u043a\u043e\u043c \u0447\u0430\u0441\u0443. [virtual] Note \u041d\u0430 \u0432\u0456\u0434\u043c\u0456\u043d\u0443 \u0432\u0456\u0434 \u0456\u043d\u0448\u0438\u0445 \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443, \u0446\u0435\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u0435\u043e\u0431\u043c\u0435\u0436\u0435\u043d\u0443 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0440\u0430\u0437\u0456\u0432 \u0434\u043b\u044f \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0440\u0456\u0437\u043d\u0438\u0445 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0438\u0445 \u044e\u043d\u0456\u0442\u0456\u0432. \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0456\u044f [model.Tense] [virtual] aliases = \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f, \u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044c duration = year * 10 [virtual] aliases = \u0432\u0456\u043a, \u0432\u0456\u043a\u0456\u0432 duration = year * 100 [virtual] aliases = \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f, \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u044c duration = year * 1000 duration aliases - \u0422\u0438\u043f: `integer` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443. - \u0422\u0438\u043f: `list[string]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u044e\u043d\u0456\u0442\u0443). [units.Second] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 1 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0441\u0435\u043a\u0443\u043d\u0434\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"s\", \"sec\", \"secs\", \"second\", \"seconds\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 \u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0441\u0435\u043a\u0443\u043d\u0434\u0438). [units.Minute] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0445\u0432\u0438\u043b\u0438\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"m\", \"min\", \"mins\", \"minute\", \"minutes\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0445\u0432\u0438\u043b\u0438\u043d\u0438). [units.Hour] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0433\u043e\u0434\u0438\u043d\u0438. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"h\", \"hour\", \"hours\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0433\u043e\u0434\u0438\u043d\u0438). [untits.Day] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0434\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"d\", \"day\", \"days\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u2013 \u0434\u043d\u044f). [units.Week] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24*7 - \u041e\u043f\u0438\u0441: \u0426\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0442\u0438\u0436\u043d\u044f. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"w\", \"week\", \"weeks\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0442\u0438\u0436\u043d\u044f). [units.Year] duration aliases - \u0422\u0438\u043f: `integer` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c: 60*60*24*365 - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0437\u0430 \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0440\u043e\u043a\u0443. - \u0422\u0438\u043f: `list[string]` - \u0417\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0443 \u0448\u0430\u0431\u043b\u043e\u043d\u0456: `[\"y\", \"year\", \"years\"]` - \u041e\u043f\u0438\u0441: \u0414\u0430\u043d\u0435 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0456\u0445 \u0430\u043b\u0456\u0430\u0441\u0456\u0432 \u043f\u0435\u0432\u043d\u043e\u0457 \u043e\u0434\u0438\u043d\u0438\u0446\u0456 \u0447\u0430\u0441\u0443 (\u0443 \u0434\u0430\u043d\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 - \u0440\u043e\u043a\u0443).","title":"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457"},{"location":"uk_faq/#_7","text":"\u0410\u043b\u0435, \u043f\u0435\u0440\u0448 \u043d\u0456\u0436 \u043c\u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u043c\u043e \u0434\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438, \u0432\u0430\u0440\u0442\u043e \u0434\u0456\u0437\u043d\u0430\u0442\u0438\u0441\u044f, \u0447\u0438\u043c \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f from_tense_file \u0432\u0456\u0434 from_tense_file_source . \u041d\u0430\u0447\u0435\u0431\u0442\u043e \u0437 \u043d\u0430\u0437\u0432\u0438 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0430 \u043d\u0456\u0431\u0438 \u043d\u0456... \u0422\u043e\u043c\u0443 \u044f \u0432\u0441\u0435 \u0437\u0430\u0440\u0430\u0437 \u043f\u043e\u044f\u0441\u043d\u044e! from_tense_file \u0432\u0456\u0434\u043a\u0440\u0438\u0432\u0430\u0454 \u0444\u0430\u0439\u043b \u0437\u0430 \u0432\u043a\u0430\u0437\u0430\u043d\u0438\u043c \u0448\u043b\u044f\u0445\u043e\u043c, \u0447\u0438\u0442\u0430\u0454 \u0439\u043e\u0433\u043e \u0442\u0430 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0432\u0438\u043a\u043b\u0438\u043a from_tense_file_source , \u044f\u043a\u0438\u0439 \u0441\u0432\u043e\u0454\u044e \u0447\u0435\u0440\u0433\u043e\u044e, \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0441\u0430\u043c\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u0435 \u0443\u044f\u0432\u043b\u0435\u043d\u043d\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0430. Note \u042f\u043a\u0449\u043e \u0432\u0438\u043a\u043e\u043d\u0443\u0454\u0442\u044c\u0441\u044f \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0437 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0439\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0443 \u0430\u0431\u043e \u0439\u043e\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u0443\u044f\u0432\u043b\u0435\u043d\u043d\u044f, \u0432\u0456\u043d \u043d\u0435 \u0437\u0430\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u043f\u043e\u0432\u043d\u0456\u0441\u0442\u044e, \u0430 \u043e\u043d\u043e\u0432\u043b\u044e\u0454 \u0432\u0436\u0435 \u0456\u0441\u043d\u0443\u044e\u0447\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0456\u044e \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u043e\u0434\u0443 dict.update(). \u042f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438\u043c\u0443 from_tense_file_source \u0434\u043b\u044f \u0435\u043c\u0443\u043b\u044f\u0446\u0456\u0457 \u043a\u043e\u043d\u0444\u0456\u0433\u0430, \u0430\u043b\u0435 \u0441\u0443\u0442\u044c \u0412\u0438 \u0437\u0440\u043e\u0437\u0443\u043c\u0456\u043b\u0438. from tense import TenseParser , from_tense_file_source , resolvers config_emulation = \"\"\" [model.Tense] [units.Second] # duration = 60 # \u0426\u0435 \u043f\u043e\u043b\u0435 \u043d\u0435 \u043e\u0431\u043e\u0432'\u044f\u0437\u043a\u043e\u0432\u0435, \u0430\u0434\u0436\u0435 \u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u0438 \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c # \u0442\u0440\u0438\u0432\u0430\u043b\u0456\u0441\u0442\u044c \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454 60 \u0441\u0435\u043a\u0443\u043d\u0434, \u0430, \u044f\u043a \u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043e\u0441\u044f \u0440\u0430\u043d\u0456\u0448\u0435, \u043a\u043e\u043d\u0444\u0456\u0433 \u043f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c\u0443 \u0441\u043f\u043e\u0441\u043e\u0431\u0456 # \u0437\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f **\u043d\u0435 \u0437\u043c\u0456\u043d\u044e\u0454\u0442\u044c\u0441\u044f** \u043d\u0430 \u043d\u043e\u0432\u0438\u0439, \u0430 **\u043e\u043d\u043e\u0432\u043b\u044e\u0454\u0442\u044c\u0441\u044f** \u043d\u043e\u0432\u0438\u043c \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u043e\u0434\u0443 dict.update(). aliases = \u0441, \u0441\u0435\u043a, \u0441\u0435\u043a\u0443\u043d\u0434\u0430, \u0441\u0435\u043a\u0443\u043d\u0434, \u0441\u0435\u043a\u0443\u043d\u0434\u0438 # \u0410\u043b\u0435 \u0442\u0443\u0442 \u0443\u0436\u0435 \u0441\u0442\u0430\u0440\u0456 \u0430\u043b\u0456\u0430\u0441\u0438 \u043d\u0435 \u0437\u0431\u0435\u0440\u0435\u0436\u0443\u0442\u044c\u0441\u044f. [virtual] aliases = \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f, \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u044c duration = exp(year * 1000) \"\"\" time_string = \"1 \u0442\u0438\u0441\u044f\u0447\u043e\u043b\u0456\u0442\u0442\u044f \u0442\u0430 20 \u0441\u0435\u043a\u0443\u043d\u0434...\" parser = TenseParser ( TenseParser . DIGIT , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) == 31536000020 # :D \u0406 \u0442\u0443\u0442 \u041e\u0441\u0442\u0430\u043f\u0430 \u043f\u043e\u043d\u0435\u0441\u043b\u043e... \u041f\u0456\u0434 \u0447\u0430\u0441 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457 \u044f \u043f\u043e\u043c\u0456\u0442\u0438\u0432 \u043e\u0434\u043d\u0443 \u0446\u0456\u043a\u0430\u0432\u0443 \u0444\u0456\u0448\u043a\u0443. \u041f\u043e \u0441\u0443\u0442\u0456 \u043d\u0456\u0445\u0442\u043e \u043d\u0435 \u0437\u0430\u0431\u043e\u0440\u043e\u043d\u044f\u0454 \u0456\u043c\u043f\u043e\u0440\u0442\u0443\u0432\u0430\u0442\u0438 VCONVERTER_CONSTS (\u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0438 \u0434\u043b\u044f \u0432\u0438\u0440\u0430\u0437\u0456\u0432 \u0443 \u043a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u0457 \u0442\u0438\u043f\u0443 year * 10 ) \u0442\u0430 \u0434\u043e\u0434\u0430\u0442\u0438 \u0442\u0443\u0434\u0438 \u043d\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f! from tense import TenseParser , from_tense_file_source , resolvers from tense.service_layer.dot_tense.converters import VCONVERTER_CONSTS VCONVERTER_CONSTS . update ({ \"\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f\" : 60 * 60 * 24 * 365 * 10 , }) config_emulation = \"\"\" [model.Tense] [virtual] aliases = \u0432\u0456\u043a, \u0432\u0456\u043a\u0456\u0432 duration = exp(\u0434\u0435\u0441\u044f\u0442\u0438\u043b\u0456\u0442\u0442\u044f * 10) \"\"\" time_string = \"1 \u0432\u0456\u043a\" parser = TenseParser ( TenseParser . TIMEDELTA , tenses = from_tense_file_source ( config_emulation ), time_resolver = resolvers . smart_resolver , ) assert parser . parse ( time_string ) . days == 36500","title":"\u041a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044f \u2013 \u0437 \u0442\u0435\u043e\u0440\u0456\u0454\u044e \u0440\u043e\u0437\u0456\u0431\u0440\u0430\u043b\u0438\u0441\u044f, \u0442\u0435\u043f\u0435\u0440 \u0434\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438!"},{"location":"uk_faq/#_8","text":"\u041f\u0440\u0438\u043c\u0456\u0442\u0438\u0432\u043d\u0438\u0439 \u0440\u044f\u0434\u043e\u043a \u0447\u0430\u0441\u0443 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0420\u044f\u0434\u043e\u043a \u0456\u0437 \u0441\u0443\u0432\u043e\u0440\u043e\u044e \u0447\u0435\u0440\u0433\u043e\u0432\u0456\u0441\u0442\u044e `(\u0447\u0438\u0441\u043b\u043e, \u043e\u0434\u0438\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443)` 1. 1\u0434\u0435\u043d\u044c 2 \u0445\u0432\u0438\u043b\u0438\u043d\u04385\u0441\u0435\u043a\u0443\u043d\u0434 \u041a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u0438\u0439 \u0440\u044f\u0434\u043e\u043a \u0447\u0430\u0441\u0443 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0420\u044f\u0434\u043e\u043a \u0437 \u043d\u0435\u0441\u0442\u0440\u043e\u0433\u043e\u044e \u0447\u0435\u0440\u0433\u043e\u0432\u0456\u0441\u0442\u044e `(\u0441\u043b\u043e\u0432\u043e..*, \u0447\u0438\u0441\u043b\u043e, \u0441\u043b\u043e\u0432\u043e..*, \u043e\u0434\u0438\u043d\u0438\u0446\u044f \u0447\u0430\u0441\u0443)` 1. \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0443\u0439, \u0431\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, 1 \u0432\u0447\u043e\u0440\u0430\u0448\u043d\u0456\u0439 \u0434\u0435\u043d\u044c \u0410\u043b\u0456\u0430\u0441(\u0438) \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u0438 \u0421\u043b\u043e\u0432\u0430-\u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0456\u043c\u0438 \u0434\u043b\u044f \u0447\u043e\u0433\u043e\u0441\u044c (\u0423 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0456 \u043d\u0430\u0448\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0443 - \u043f\u0441\u0435\u0432\u0434\u043e\u043d\u0456\u043c\u0438 \u0434\u043b\u044f \u043e\u0434\u0438\u043d\u0438\u0446\u044c \u0447\u0430\u0441\u0443). 1. units.Second - [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"] \u0420\u0435\u0437\u043e\u043b\u044c\u0432\u0435\u0440 \u0412\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0424\u0443\u043d\u043a\u0446\u0456\u044f, \u044f\u043a\u0430 \u0430\u0434\u0430\u043f\u0442\u0443\u0454 (\u043f\u0456\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u044f\u0454) \u0440\u044f\u0434\u043e\u043a \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0435\u0440\u0430.","title":"\u0413\u043b\u043e\u0441\u0430\u0440\u0456\u0439"}]}